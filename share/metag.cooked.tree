Cooked tree. Attributes: {rule => "", uid => "1"}
    |--- statements. Attributes: {rule => "", uid => "2"}
    |--- default_rule. Attributes: {rule => ":default ::= action => [start,length,values] bless => ::lhs", uid => "3"}
    |--- lexeme_default_statement. Attributes: {rule => "lexeme default = action => [start,length,value] bless => ::name latm => 1", uid => "4"}
    |--- start_rule. Attributes: {rule => ":start ::= statements", uid => "5"}
    |--- quantified_rule. Attributes: {rule => "statements ::= statement+", uid => "6"}
    |--- priority_rule. Attributes: {rule => "statement ::= <start rule> | <empty rule> | <null statement> | <statement group> | <priority rule> | <quantified rule> | <discard rule> | <default rule> | <lexeme default statement> | <discard default statement> | <lexeme rule> | <completion event declaration> | <nulled event declaration> | <prediction event declaration> | <current lexer statement> | <inaccessible statement>", uid => "7"}
    |--- priority_rule. Attributes: {rule => "<null statement> ::= ';'", uid => "8"}
    |--- priority_rule. Attributes: {rule => "<statement group> ::= ('{') statements '}'", uid => "9"}
    |--- priority_rule. Attributes: {rule => "<start rule> ::= (':start'  <op declare bnf>) symbol", uid => "10"}
    |--- priority_rule. Attributes: {rule => "<start rule> ::= ('start' 'symbol' 'is') symbol", uid => "11"}
    |--- priority_rule. Attributes: {rule => "<default rule> ::=  <adverb list>", uid => "12"}
    |--- priority_rule. Attributes: {rule => "<lexeme default statement> ::= ('lexeme' 'default' '=') <adverb list>", uid => "13"}
    |--- priority_rule. Attributes: {rule => "<discard default statement> ::= ('discard' 'default' '=') <adverb list>", uid => "14"}
    |--- priority_rule. Attributes: {rule => "<priority rule> ::= lhs <op declare> priorities", uid => "15"}
    |--- priority_rule. Attributes: {rule => "<empty rule> ::= lhs <op declare> <adverb list>", uid => "16"}
    |--- priority_rule. Attributes: {rule => "<quantified rule> ::= lhs <op declare> <single symbol> quantifier <adverb list>", uid => "17"}
    |--- priority_rule. Attributes: {rule => "<discard rule> ::= (':discard'  <op declare match>) <single symbol> <adverb list>", uid => "18"}
    |--- priority_rule. Attributes: {rule => "<lexeme rule> ::= (':lexeme'  <op declare match>) symbol <adverb list>", uid => "19"}
    |--- priority_rule. Attributes: {rule => "<completion event declaration> ::= ('event') <event initialization> '=' 'completed' <symbol name>", uid => "20"}
    |--- priority_rule. Attributes: {rule => "<nulled event declaration> ::= ('event') <event initialization> '=' 'nulled' <symbol name>", uid => "21"}
    |--- priority_rule. Attributes: {rule => "<prediction event declaration> ::= ('event') <event initialization> '=' 'predicted' <symbol name>", uid => "22"}
    |--- priority_rule. Attributes: {rule => "<current lexer statement> ::= ('current' 'lexer' 'is') <lexer name>", uid => "23"}
    |--- priority_rule. Attributes: {rule => "<inaccessible statement> ::= ('inaccessible' 'is') <inaccessible treatment> 'by' 'default'", uid => "24"}
    |--- priority_rule. Attributes: {rule => "<inaccessible treatment> ::=  'fatal'", uid => "25"}
    |--- priority_rule. Attributes: {rule => "<op declare> ::= <op declare bnf> | <op declare match>", uid => "26"}
    |--- quantified_rule. Attributes: {rule => "priorities ::= alternatives+", uid => "27"}
    |--- quantified_rule. Attributes: {rule => "alternatives ::= alternative+", uid => "28"}
    |--- priority_rule. Attributes: {rule => "alternative ::= rhs <adverb list>", uid => "29"}
    |--- priority_rule. Attributes: {rule => "<adverb list> ::= <adverb list items>", uid => "30"}
    |--- quantified_rule. Attributes: {rule => "<adverb list items> ::= <adverb item>*", uid => "31"}
    |--- priority_rule. Attributes: {rule => "<adverb item> ::= action | <left association> | <right association> | <group association> | <separator specification> | <proper specification> | <rank specification> | <null ranking specification> | <priority specification> | <pause specification> | <event specification> | <latm specification> | blessing | naming | <null adverb>", uid => "32"}
    |--- priority_rule. Attributes: {rule => "<null adverb> ::= ','", uid => "33"}
    |--- priority_rule. Attributes: {rule => "action ::= ('action' '=>') <action name>", uid => "34"}
    |--- priority_rule. Attributes: {rule => "<left association> ::= ('assoc' '=>' 'left')", uid => "35"}
    |--- priority_rule. Attributes: {rule => "<right association> ::= ('assoc' '=>' 'right')", uid => "36"}
    |--- priority_rule. Attributes: {rule => "<group association> ::= ('assoc' '=>' 'group')", uid => "37"}
    |--- priority_rule. Attributes: {rule => "<separator specification> ::= ('separator' '=>') <single symbol>", uid => "38"}
    |--- priority_rule. Attributes: {rule => "<proper specification> ::= ('proper' '=>') boolean", uid => "39"}
    |--- priority_rule. Attributes: {rule => "<rank specification> ::= ('rank' '=>') <signed integer>", uid => "40"}
    |--- priority_rule. Attributes: {rule => "<null ranking specification> ::= ('null-ranking' '=>') <null ranking constant>", uid => "41"}
    |--- priority_rule. Attributes: {rule => "<null ranking specification> ::= ('null' 'rank' '=>') <null ranking constant>", uid => "42"}
    |--- priority_rule. Attributes: {rule => "<null ranking constant> ::= ", uid => "43"}
    |--- priority_rule. Attributes: {rule => "<priority specification> ::= ('priority' '=>') <signed integer>", uid => "44"}
    |--- priority_rule. Attributes: {rule => "<pause specification> ::= ('pause' '=>') <before or after>", uid => "45"}
    |--- priority_rule. Attributes: {rule => "<event specification> ::= ('event' '=>') <event initialization>", uid => "46"}
    |--- priority_rule. Attributes: {rule => "<event initialization> ::= <event name> <event initializer>", uid => "47"}
    |--- priority_rule. Attributes: {rule => "<event initializer> ::= ('=') <on or off>", uid => "48"}
    |--- priority_rule. Attributes: {rule => "<on or off> ::= ", uid => "49"}
    |--- lhs. Attributes: {rule => "", uid => "50"}
    |--- priority_rule. Attributes: {rule => "<latm specification> ::= ('forgiving' '=>') boolean", uid => "51"}
    |--- priority_rule. Attributes: {rule => "<latm specification> ::= ('latm' '=>') boolean", uid => "52"}
    |--- priority_rule. Attributes: {rule => "<blessing> ::= ('bless' '=>') <blessing name>", uid => "53"}
    |--- priority_rule. Attributes: {rule => "<naming> ::= ('name' '=>') <alternative name>", uid => "54"}
    |--- priority_rule. Attributes: {rule => "<alternative name> ::= <standard name> | <single quoted name>", uid => "55"}
    |--- priority_rule. Attributes: {rule => "<lexer name> ::= <standard name> | <single quoted name>", uid => "56"}
    |--- priority_rule. Attributes: {rule => "<event name> ::= <standard name> | <single quoted name> | <reserved event name>", uid => "57"}
    |--- priority_rule. Attributes: {rule => "<reserved event name> ~ ':symbol'", uid => "58"}
    |--- priority_rule. Attributes: {rule => "<blessing name> ::= <standard name>", uid => "59"}
    |--- priority_rule. Attributes: {rule => "<blessing name> ::= <reserved blessing name>", uid => "60"}
    |--- priority_rule. Attributes: {rule => "lhs ::= <symbol name>", uid => "61"}
    |--- quantified_rule. Attributes: {rule => "rhs ::= <rhs primary>+", uid => "62"}
    |--- priority_rule. Attributes: {rule => "<rhs primary> ::= <single symbol>", uid => "63"}
    |--- priority_rule. Attributes: {rule => "<rhs primary> ::= <single quoted string>", uid => "64"}
    |--- priority_rule. Attributes: {rule => "<rhs primary> ::= <parenthesized rhs primary list>", uid => "65"}
    |--- priority_rule. Attributes: {rule => "<parenthesized rhs primary list> ::= ('(') <rhs primary list> ')'", uid => "66"}
    |--- quantified_rule. Attributes: {rule => "<rhs primary list> ::= <rhs primary>+", uid => "67"}
    |--- priority_rule. Attributes: {rule => "<single symbol> ::= symbol | <character class>", uid => "68"}
    |--- priority_rule. Attributes: {rule => "symbol ::= <symbol name>", uid => "69"}
    |--- priority_rule. Attributes: {rule => "<symbol name> ::= <bare name>", uid => "70"}
    |--- priority_rule. Attributes: {rule => "<symbol name> ::= <bracketed name>", uid => "71"}
    |--- priority_rule. Attributes: {rule => "<action name> ::= <Perl name>", uid => "72"}
    |--- priority_rule. Attributes: {rule => "<action name> ::= <reserved action name>", uid => "73"}
    |--- priority_rule. Attributes: {rule => "<action name> ::= <array descriptor>", uid => "74"}
    |--- discard_rule. Attributes: {rule => "", uid => "75"}
    |--- quantified_rule. Attributes: {rule => "whitespace ~ [\s]+", uid => "76"}
    |--- discard_rule. Attributes: {rule => "", uid => "77"}
    |--- priority_rule. Attributes: {rule => "<hash comment> ~ <terminated hash comment> | <unterminated final hash comment>", uid => "78"}
    |--- priority_rule. Attributes: {rule => "<terminated hash comment> ~  <vertical space char>", uid => "79"}
    |--- priority_rule. Attributes: {rule => "<unterminated final hash comment> ~ ", uid => "80"}
    |--- quantified_rule. Attributes: {rule => "<hash comment body> ~ <hash comment char>*", uid => "81"}
    |--- priority_rule. Attributes: {rule => "<vertical space char> ~ [\x{A}\x{B}\x{C}\x{D}\x{2028}\x{2029}]", uid => "82"}
    |--- priority_rule. Attributes: {rule => "<hash comment char> ~ [^\x{A}\x{B}\x{C}\x{D}\x{2028}\x{2029}]", uid => "83"}
    |--- priority_rule. Attributes: {rule => "<op declare bnf> ~ '::='", uid => "84"}
    |--- priority_rule. Attributes: {rule => "<op declare match> ~ '~'", uid => "85"}
    |--- priority_rule. Attributes: {rule => "<op loosen> ~ '||'", uid => "86"}
    |--- priority_rule. Attributes: {rule => "<op equal priority> ~ '|'", uid => "87"}
    |--- priority_rule. Attributes: {rule => "quantifier ::= ", uid => "88"}
    |--- priority_rule. Attributes: {rule => "<before or after> ~ ", uid => "89"}
    |--- priority_rule. Attributes: {rule => "<signed integer> ~ <integer> | <sign> <integer>", uid => "90"}
    |--- priority_rule. Attributes: {rule => "<sign> ~ [+-]", uid => "91"}
    |--- quantified_rule. Attributes: {rule => "<integer> ~ [\d]+", uid => "92"}
    |--- priority_rule. Attributes: {rule => "boolean ~ [01]", uid => "93"}
    |--- priority_rule. Attributes: {rule => "<reserved action name> ~ ", uid => "94"}
    |--- priority_rule. Attributes: {rule => "<reserved blessing name> ~ ", uid => "95"}
    |--- quantified_rule. Attributes: {rule => "<one or more word characters> ~ [\w]+", uid => "96"}
    |--- quantified_rule. Attributes: {rule => "<zero or more word characters> ~ [\w]*", uid => "97"}
    |--- quantified_rule. Attributes: {rule => "<Perl identifier> ~ [\w]+", uid => "98"}
    |--- priority_rule. Attributes: {rule => "<double colon> ~ '::'", uid => "99"}
    |--- quantified_rule. Attributes: {rule => "<Perl name> ~ <Perl identifier>+", uid => "100"}
    |--- quantified_rule. Attributes: {rule => "<bare name> ~ [\w]+", uid => "101"}
    |--- priority_rule. Attributes: {rule => "<standard name> ~ [a-zA-Z] <zero or more word characters>", uid => "102"}
    |--- priority_rule. Attributes: {rule => "<bracketed name> ~  '>'", uid => "103"}
    |--- quantified_rule. Attributes: {rule => "<bracketed name string> ~ [\s\w]+", uid => "104"}
    |--- priority_rule. Attributes: {rule => "<array descriptor> ~ <array descriptor left bracket> <result item descriptor list> <array descriptor right bracket>", uid => "105"}
    |--- priority_rule. Attributes: {rule => "<array descriptor left bracket> ~ '['", uid => "106"}
    |--- priority_rule. Attributes: {rule => "<array descriptor left bracket> ~ ", uid => "107"}
    |--- priority_rule. Attributes: {rule => "<array descriptor right bracket> ~ ']'", uid => "108"}
    |--- priority_rule. Attributes: {rule => "<array descriptor right bracket> ~ whitespace", uid => "109"}
    |--- quantified_rule. Attributes: {rule => "<result item descriptor list> ~ <result item descriptor>*", uid => "110"}
    |--- priority_rule. Attributes: {rule => "<result item descriptor separator> ~ [,]", uid => "111"}
    |--- priority_rule. Attributes: {rule => "<result item descriptor separator> ~ [,] whitespace", uid => "112"}
    |--- priority_rule. Attributes: {rule => "<result item descriptor> ~     ", uid => "113"}
    |--- priority_rule. Attributes: {rule => "<single quoted string> ~ ['] <string without single quote or vertical space> ['] <character class modifiers>", uid => "114"}
    |--- priority_rule. Attributes: {rule => "<single quoted name> ~ ['] <string without single quote or vertical space> [']", uid => "115"}
    |--- quantified_rule. Attributes: {rule => "<string without single quote or vertical space> ~ [^'\x{0A}\x{0B}\x{0C}\x{0D}\x{0085}\x{2028}\x{2029}]+", uid => "116"}
    |--- priority_rule. Attributes: {rule => "<character class> ~  ']' <character class modifiers>", uid => "117"}
    |--- quantified_rule. Attributes: {rule => "<cc elements> ~ <cc element>+", uid => "118"}
    |--- priority_rule. Attributes: {rule => "<cc element> ~ <safe cc character>", uid => "119"}
    |--- priority_rule. Attributes: {rule => "<safe cc character> ~ [^\x{5d}\x{0A}\x{0B}\x{0C}\x{0D}\x{0085}\x{2028}\x{2029}]", uid => "120"}
    |--- priority_rule. Attributes: {rule => "<cc element> ~ <escaped cc character>", uid => "121"}
    |--- priority_rule. Attributes: {rule => "<escaped cc character> ~ ", uid => "122"}
    |--- priority_rule. Attributes: {rule => "<cc element> ~ <posix char class>", uid => "123"}
    |--- priority_rule. Attributes: {rule => "<cc element> ~ <negated posix char class>", uid => "124"}
    |--- quantified_rule. Attributes: {rule => "<character class modifiers> ~ <character class modifier>*", uid => "125"}
    |--- priority_rule. Attributes: {rule => "<character class modifier> ~ ':ic'", uid => "126"}
    |--- priority_rule. Attributes: {rule => "<character class modifier> ~ ':i'", uid => "127"}
    |--- priority_rule. Attributes: {rule => "<posix char class> ~  ':]'", uid => "128"}
    |--- priority_rule. Attributes: {rule => "<negated posix char class> ~  ':]'", uid => "129"}
    |--- quantified_rule. Attributes: {rule => "<posix char class name> ~ [[:alnum:]]+", uid => "130"}
