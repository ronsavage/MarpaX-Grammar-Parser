statements. Attributes: {token => ""}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":default"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "action"}
    |    |    |--- array_descriptor. Attributes: {token => "[values]"}
    |    |--- bless. Attributes: {token => "bless"}
    |         |--- reserved_blessing_name. Attributes: {token => "::lhs"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "lexeme default"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- action. Attributes: {token => "action"}
    |    |    |--- array_descriptor. Attributes: {token => "[start,length,value]"}
    |    |--- latm_specification. Attributes: {token => "latm"}
    |         |--- boolean. Attributes: {token => "1"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":start"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- :start. Attributes: {token => "translationUnit"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "primaryExpression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "constant"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "string"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "genericSelection"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "gccStatementExpression"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "constant"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "I_CONSTANT"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "F_CONSTANT"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "ENUMERATION_CONSTANT"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "<enumerationConstantIdentifier>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "enumerationConstantIdentifier"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER_UNAMBIGUOUS"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "enumerationConstant"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "enumerationConstantIdentifier"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "stringLiteral"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "STRING_LITERAL_UNIT"}
    |         |--- quantifier. Attributes: {token => "+"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "string"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "stringLiteral"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "FUNC_NAME"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "genericSelection"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "GENERIC"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "genericAssocList"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "genericAssocList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "genericAssociation"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "genericAssocList"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "genericAssociation"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "genericAssociation"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "typeName"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "DEFAULT"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "postfixExpression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "primaryExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "postfixExpression"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "postfixExpression"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "postfixExpression"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "argumentExpressionList"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "gccBuiltinVaStart"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "gccBuiltinVaEnd"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "gccBuiltinVaArg"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "gccBuiltinOffsetof"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "postfixExpression"}
    |    |--- rhs. Attributes: {token => "DOT"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER_UNAMBIGUOUS"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "postfixExpression"}
    |    |--- rhs. Attributes: {token => "PTR_OP"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER_UNAMBIGUOUS"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "postfixExpression"}
    |    |--- rhs. Attributes: {token => "INC_OP"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "postfixExpression"}
    |    |--- rhs. Attributes: {token => "DEC_OP"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "typeName"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- rhs. Attributes: {token => "LCURLY"}
    |    |--- rhs. Attributes: {token => "initializerList"}
    |    |--- rhs. Attributes: {token => "RCURLY"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "typeName"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- rhs. Attributes: {token => "LCURLY"}
    |    |--- rhs. Attributes: {token => "initializerList"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "RCURLY"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "argumentExpressionList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "argumentExpressionList"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "argumentExpressionList"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccAlignofExpression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "GCC_ALIGNOF"}
    |    |--- rhs. Attributes: {token => "unaryExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "GCC_ALIGNOF"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "typeName"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "unaryExpression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "postfixExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "gccExtension"}
    |    |--- rhs. Attributes: {token => "postfixExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "INC_OP"}
    |    |--- rhs. Attributes: {token => "unaryExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "DEC_OP"}
    |    |--- rhs. Attributes: {token => "unaryExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "unaryOperator"}
    |    |--- rhs. Attributes: {token => "castExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "SIZEOF"}
    |    |--- rhs. Attributes: {token => "unaryExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "SIZEOF"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "typeName"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "ALIGNOF"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "typeName"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "gccAlignofExpression"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "unaryOperator"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "AMPERSAND"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "STAR"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "PLUS"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "HYPHEN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "TILDE"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "EXCLAMATION"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "castExpression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "unaryExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "typeName"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- rhs. Attributes: {token => "castExpression"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "multiplicativeExpression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "castExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "multiplicativeExpression"}
    |    |--- rhs. Attributes: {token => "STAR"}
    |    |--- rhs. Attributes: {token => "castExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "multiplicativeExpression"}
    |    |--- rhs. Attributes: {token => "SLASH"}
    |    |--- rhs. Attributes: {token => "castExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "multiplicativeExpression"}
    |    |--- rhs. Attributes: {token => "PERCENT"}
    |    |--- rhs. Attributes: {token => "castExpression"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "additiveExpression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "multiplicativeExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "additiveExpression"}
    |    |--- rhs. Attributes: {token => "PLUS"}
    |    |--- rhs. Attributes: {token => "multiplicativeExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "additiveExpression"}
    |    |--- rhs. Attributes: {token => "HYPHEN"}
    |    |--- rhs. Attributes: {token => "multiplicativeExpression"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "shiftExpression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "additiveExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "shiftExpression"}
    |    |--- rhs. Attributes: {token => "LEFT_OP"}
    |    |--- rhs. Attributes: {token => "additiveExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "shiftExpression"}
    |    |--- rhs. Attributes: {token => "RIGHT_OP"}
    |    |--- rhs. Attributes: {token => "additiveExpression"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "relationalExpression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "shiftExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "relationalExpression"}
    |    |--- rhs. Attributes: {token => "LESS_THAN"}
    |    |--- rhs. Attributes: {token => "shiftExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "relationalExpression"}
    |    |--- rhs. Attributes: {token => "GREATER_THAN"}
    |    |--- rhs. Attributes: {token => "shiftExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "relationalExpression"}
    |    |--- rhs. Attributes: {token => "LE_OP"}
    |    |--- rhs. Attributes: {token => "shiftExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "relationalExpression"}
    |    |--- rhs. Attributes: {token => "GE_OP"}
    |    |--- rhs. Attributes: {token => "shiftExpression"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "equalityExpression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "relationalExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "equalityExpression"}
    |    |--- rhs. Attributes: {token => "EQ_OP"}
    |    |--- rhs. Attributes: {token => "relationalExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "equalityExpression"}
    |    |--- rhs. Attributes: {token => "NE_OP"}
    |    |--- rhs. Attributes: {token => "relationalExpression"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "andExpression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "equalityExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "andExpression"}
    |    |--- rhs. Attributes: {token => "AMPERSAND"}
    |    |--- rhs. Attributes: {token => "equalityExpression"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "exclusiveOrExpression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "andExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "exclusiveOrExpression"}
    |    |--- rhs. Attributes: {token => "CARET"}
    |    |--- rhs. Attributes: {token => "andExpression"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "inclusiveOrExpression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "exclusiveOrExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "inclusiveOrExpression"}
    |    |--- rhs. Attributes: {token => "VERTICAL_BAR"}
    |    |--- rhs. Attributes: {token => "exclusiveOrExpression"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "logicalAndExpression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "inclusiveOrExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "logicalAndExpression"}
    |    |--- rhs. Attributes: {token => "AND_OP"}
    |    |--- rhs. Attributes: {token => "inclusiveOrExpression"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "logicalOrExpression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "logicalAndExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "logicalOrExpression"}
    |    |--- rhs. Attributes: {token => "OR_OP"}
    |    |--- rhs. Attributes: {token => "logicalAndExpression"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "conditionalExpression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "logicalOrExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "logicalOrExpression"}
    |    |--- rhs. Attributes: {token => "QUESTION_MARK"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "logicalOrExpression"}
    |    |--- rhs. Attributes: {token => "QUESTION_MARK"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "assignmentExpression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "conditionalExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "castExpression"}
    |    |--- rhs. Attributes: {token => "assignmentOperator"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "assignmentOperator"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "EQUAL"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "MUL_ASSIGN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "DIV_ASSIGN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "MOD_ASSIGN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "ADD_ASSIGN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "SUB_ASSIGN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LEFT_ASSIGN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "RIGHT_ASSIGN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "AND_ASSIGN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "XOR_ASSIGN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "OR_ASSIGN"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "expression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "constantExpression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "conditionalExpression"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "<declarationCheckdeclarationSpecifiers>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "declarationCheckdeclarationSpecifiers"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "<declarationCheckinitDeclaratorList>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "declarationCheckinitDeclaratorList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "initDeclaratorList"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "<declarationCheck>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "declarationCheck"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "declarationCheckdeclarationSpecifiers"}
    |    |--- rhs. Attributes: {token => "declarationCheckinitDeclaratorList"}
    |    |--- rhs. Attributes: {token => "SEMICOLON"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "declaration"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers"}
    |    |--- rhs. Attributes: {token => "SEMICOLON"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationCheck"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "staticAssertDeclaration"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccExtension"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "GCC_EXTENSION"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "declarationSpecifiers"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers0"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers1"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers2"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "declarationSpecifiers0"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "storageClassSpecifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers0"}
    |    |--- rhs. Attributes: {token => "storageClassSpecifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "typeQualifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers0"}
    |    |--- rhs. Attributes: {token => "typeQualifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "functionSpecifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers0"}
    |    |--- rhs. Attributes: {token => "functionSpecifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "alignmentSpecifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers0"}
    |    |--- rhs. Attributes: {token => "alignmentSpecifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "gccExtension"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers0"}
    |    |--- rhs. Attributes: {token => "gccExtension"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "declarationSpecifiers1"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "typeSpecifier1"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers0"}
    |    |--- rhs. Attributes: {token => "typeSpecifier1"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers1"}
    |    |--- rhs. Attributes: {token => "storageClassSpecifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers1"}
    |    |--- rhs. Attributes: {token => "typeQualifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers1"}
    |    |--- rhs. Attributes: {token => "functionSpecifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers1"}
    |    |--- rhs. Attributes: {token => "alignmentSpecifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers1"}
    |    |--- rhs. Attributes: {token => "gccExtension"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "declarationSpecifiers2"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "typeSpecifier2"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers0"}
    |    |--- rhs. Attributes: {token => "typeSpecifier2"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers2"}
    |    |--- rhs. Attributes: {token => "typeSpecifier2"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers2"}
    |    |--- rhs. Attributes: {token => "storageClassSpecifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers2"}
    |    |--- rhs. Attributes: {token => "typeQualifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers2"}
    |    |--- rhs. Attributes: {token => "functionSpecifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers2"}
    |    |--- rhs. Attributes: {token => "alignmentSpecifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers2"}
    |    |--- rhs. Attributes: {token => "gccExtension"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "initDeclaratorList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "initDeclarator"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "initDeclaratorList"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "initDeclarator"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "initDeclarator"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "declarator"}
    |    |--- rhs. Attributes: {token => "EQUAL"}
    |    |--- rhs. Attributes: {token => "initializer"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarator"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "<storageClassSpecifierTypedef>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "storageClassSpecifierTypedef"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "TYPEDEF"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "storageClassSpecifier"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "storageClassSpecifierTypedef"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "EXTERN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "STATIC"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "THREAD_LOCAL"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "AUTO"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "REGISTER"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "typeSpecifier1"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "VOID"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "FLOAT"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "structOrUnionSpecifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "enumSpecifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "TYPEDEF_NAME"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "typeSpecifier2"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "CHAR"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "SHORT"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "INT"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LONG"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "DOUBLE"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "SIGNED"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "UNSIGNED"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "BOOL"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LABEL"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "COMPLEX"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "IMAGINARY"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "atomicTypeSpecifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "msvsBuiltinType"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "gccBuiltinType"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "<structContextStart>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "structContextStart"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "<structContextEnd>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "structContextEnd"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "structOrUnionSpecifier"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "structOrUnion"}
    |    |--- rhs. Attributes: {token => "LCURLY"}
    |    |--- rhs. Attributes: {token => "<structContextStart>"}
    |    |--- rhs. Attributes: {token => "structDeclarationList"}
    |    |--- rhs. Attributes: {token => "RCURLY"}
    |    |--- rhs. Attributes: {token => "<structContextEnd>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "structOrUnion"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER_UNAMBIGUOUS"}
    |    |--- rhs. Attributes: {token => "LCURLY"}
    |    |--- rhs. Attributes: {token => "<structContextStart>"}
    |    |--- rhs. Attributes: {token => "structDeclarationList"}
    |    |--- rhs. Attributes: {token => "RCURLY"}
    |    |--- rhs. Attributes: {token => "<structContextEnd>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "structOrUnion"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER_UNAMBIGUOUS"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "structOrUnion"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "STRUCT"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "UNION"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "structDeclarationList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "structDeclaration"}
    |         |--- quantifier. Attributes: {token => "+"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "structDeclaration"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "specifierQualifierList"}
    |    |--- rhs. Attributes: {token => "SEMICOLON"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "specifierQualifierList"}
    |    |--- rhs. Attributes: {token => "structDeclaratorList"}
    |    |--- rhs. Attributes: {token => "SEMICOLON"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "SEMICOLON"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "specifierQualifierList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "specifierQualifierList0"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "specifierQualifierList1"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "specifierQualifierList2"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "specifierQualifierList0"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "typeQualifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "specifierQualifierList0"}
    |    |--- rhs. Attributes: {token => "typeQualifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "gccExtension"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "specifierQualifierList0"}
    |    |--- rhs. Attributes: {token => "gccExtension"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "specifierQualifierList1"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "typeSpecifier1"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "specifierQualifierList0"}
    |    |--- rhs. Attributes: {token => "typeSpecifier1"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "specifierQualifierList1"}
    |    |--- rhs. Attributes: {token => "typeQualifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "specifierQualifierList1"}
    |    |--- rhs. Attributes: {token => "gccExtension"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "specifierQualifierList2"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "typeSpecifier2"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "specifierQualifierList0"}
    |    |--- rhs. Attributes: {token => "typeSpecifier2"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "specifierQualifierList2"}
    |    |--- rhs. Attributes: {token => "typeSpecifier2"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "specifierQualifierList2"}
    |    |--- rhs. Attributes: {token => "typeQualifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "specifierQualifierList2"}
    |    |--- rhs. Attributes: {token => "gccExtension"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "structDeclaratorList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "structDeclarator"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "structDeclaratorList"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "structDeclarator"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "structDeclarator"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- rhs. Attributes: {token => "constantExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarator"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- rhs. Attributes: {token => "constantExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declarator"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "enumSpecifier"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "ENUM"}
    |    |--- rhs. Attributes: {token => "LCURLY"}
    |    |--- rhs. Attributes: {token => "enumeratorList"}
    |    |--- rhs. Attributes: {token => "RCURLY"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "ENUM"}
    |    |--- rhs. Attributes: {token => "LCURLY"}
    |    |--- rhs. Attributes: {token => "enumeratorList"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "RCURLY"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "ENUM"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER_UNAMBIGUOUS"}
    |    |--- rhs. Attributes: {token => "LCURLY"}
    |    |--- rhs. Attributes: {token => "enumeratorList"}
    |    |--- rhs. Attributes: {token => "RCURLY"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "ENUM"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER_UNAMBIGUOUS"}
    |    |--- rhs. Attributes: {token => "LCURLY"}
    |    |--- rhs. Attributes: {token => "enumeratorList"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "RCURLY"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "ENUM"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER_UNAMBIGUOUS"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "enumeratorList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "enumerator"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "enumeratorList"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "enumerator"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "enumerator"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "enumerationConstant"}
    |    |--- rhs. Attributes: {token => "EQUAL"}
    |    |--- rhs. Attributes: {token => "constantExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "enumerationConstant"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "atomicTypeSpecifier"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "ATOMIC"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "typeName"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "typeQualifier"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "CONST"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "RESTRICT"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "VOLATILE"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "ATOMIC"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "MSVS_W64"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "MSVS_PTR32"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "MSVS_PTR64"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "functionSpecifier"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "INLINE"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "NORETURN"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "alignmentSpecifier"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "ALIGNAS"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "typeName"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "ALIGNAS"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "constantExpression"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "msvsAttributeAny"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "msvsAttribute"}
    |         |--- quantifier. Attributes: {token => "*"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "declarator"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "pointer"}
    |    |--- rhs. Attributes: {token => "msvsAttributeAny"}
    |    |--- rhs. Attributes: {token => "directDeclarator"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "pointer"}
    |    |--- rhs. Attributes: {token => "msvsAttributeAny"}
    |    |--- rhs. Attributes: {token => "directDeclarator"}
    |    |--- rhs. Attributes: {token => "gccAsmExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "msvsAttributeAny"}
    |    |--- rhs. Attributes: {token => "directDeclarator"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "msvsAttributeAny"}
    |    |--- rhs. Attributes: {token => "directDeclarator"}
    |    |--- rhs. Attributes: {token => "gccAsmExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "MSVS___C_ASSERT__"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "<directDeclaratorIdentifier>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "directDeclaratorIdentifier"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "directDeclarator"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "directDeclaratorIdentifier"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "declarator"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directDeclarator"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directDeclarator"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "STAR"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directDeclarator"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "STATIC"}
    |    |--- rhs. Attributes: {token => "gccArrayTypeModifierList"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directDeclarator"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "STATIC"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directDeclarator"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "gccArrayTypeModifierList"}
    |    |--- rhs. Attributes: {token => "STAR"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directDeclarator"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "gccArrayTypeModifierList"}
    |    |--- rhs. Attributes: {token => "STATIC"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directDeclarator"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "gccArrayTypeModifierList"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directDeclarator"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "gccArrayTypeModifierList"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directDeclarator"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directDeclarator"}
    |    |--- rhs. Attributes: {token => "LPAREN_SCOPE"}
    |    |--- rhs. Attributes: {token => "parameterTypeList"}
    |    |--- rhs. Attributes: {token => "RPAREN_SCOPE"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directDeclarator"}
    |    |--- rhs. Attributes: {token => "LPAREN_SCOPE"}
    |    |--- rhs. Attributes: {token => "RPAREN_SCOPE"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directDeclarator"}
    |    |--- rhs. Attributes: {token => "LPAREN_SCOPE"}
    |    |--- rhs. Attributes: {token => "identifierList"}
    |    |--- rhs. Attributes: {token => "RPAREN_SCOPE"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "pointerQualifier"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "typeQualifier"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "pointerQualifierList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "pointerQualifier"}
    |         |--- quantifier. Attributes: {token => "+"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "pointer"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "msvsAttributeAny"}
    |    |--- rhs. Attributes: {token => "STAR"}
    |    |--- rhs. Attributes: {token => "pointerQualifierList"}
    |    |--- rhs. Attributes: {token => "pointer"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "msvsAttributeAny"}
    |    |--- rhs. Attributes: {token => "STAR"}
    |    |--- rhs. Attributes: {token => "pointerQualifierList"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "msvsAttributeAny"}
    |    |--- rhs. Attributes: {token => "STAR"}
    |    |--- rhs. Attributes: {token => "pointer"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "msvsAttributeAny"}
    |    |--- rhs. Attributes: {token => "STAR"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccArrayTypeModifierList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "gccArrayTypeModifier"}
    |         |--- quantifier. Attributes: {token => "+"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "parameterTypeList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "parameterList"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "ELLIPSIS"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "parameterList"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "parameterList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "parameterDeclaration"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "parameterList"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "parameterDeclaration"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "<parameterDeclarationdeclarationSpecifiers>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "parameterDeclarationdeclarationSpecifiers"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "<parameterDeclarationCheck>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "parameterDeclarationCheck"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "parameterDeclarationdeclarationSpecifiers"}
    |    |--- rhs. Attributes: {token => "parameterDeclarationCheckDeclarator"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "<parameterDeclarationCheckDeclarator>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "parameterDeclarationCheckDeclarator"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "declarator"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "parameterDeclaration"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "parameterDeclarationCheck"}
    |    |--- rank_specification. Attributes: {token => "rank_specification"}
    |    |    |--- rank. Attributes: {token => "0"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rank. Attributes: {token => "declarationSpecifiers"}
    |    |--- rhs. Attributes: {token => "abstractDeclarator"}
    |    |--- rank_specification. Attributes: {token => "rank_specification"}
    |    |    |--- rank. Attributes: {token => "-1"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rank. Attributes: {token => "declarationSpecifiers"}
    |    |--- rank_specification. Attributes: {token => "rank_specification"}
    |         |--- rank. Attributes: {token => "-2"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "identifierList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "identifierList"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "typeName"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "specifierQualifierList"}
    |    |--- rhs. Attributes: {token => "abstractDeclarator"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "specifierQualifierList"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "abstractDeclarator"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "pointer"}
    |    |--- rhs. Attributes: {token => "msvsAttributeAny"}
    |    |--- rhs. Attributes: {token => "directAbstractDeclarator"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "pointer"}
    |    |--- rhs. Attributes: {token => "msvsAttributeAny"}
    |    |--- rhs. Attributes: {token => "directAbstractDeclarator"}
    |    |--- rhs. Attributes: {token => "gccAsmExpression"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "pointer"}
    |    |--- rhs. Attributes: {token => "msvsAttributeAny"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directAbstractDeclarator"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directAbstractDeclarator"}
    |    |--- rhs. Attributes: {token => "gccAsmExpression"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "directAbstractDeclarator"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "abstractDeclarator"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "STAR"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "STATIC"}
    |    |--- rhs. Attributes: {token => "gccArrayTypeModifierList"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "STATIC"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "gccArrayTypeModifierList"}
    |    |--- rhs. Attributes: {token => "STATIC"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "gccArrayTypeModifierList"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "gccArrayTypeModifierList"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directAbstractDeclarator"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directAbstractDeclarator"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "STAR"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directAbstractDeclarator"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "STATIC"}
    |    |--- rhs. Attributes: {token => "gccArrayTypeModifierList"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directAbstractDeclarator"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "STATIC"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directAbstractDeclarator"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "gccArrayTypeModifierList"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directAbstractDeclarator"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "gccArrayTypeModifierList"}
    |    |--- rhs. Attributes: {token => "STATIC"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directAbstractDeclarator"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "gccArrayTypeModifierList"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directAbstractDeclarator"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LPAREN_SCOPE"}
    |    |--- rhs. Attributes: {token => "RPAREN_SCOPE"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LPAREN_SCOPE"}
    |    |--- rhs. Attributes: {token => "parameterTypeList"}
    |    |--- rhs. Attributes: {token => "RPAREN_SCOPE"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directAbstractDeclarator"}
    |    |--- rhs. Attributes: {token => "LPAREN_SCOPE"}
    |    |--- rhs. Attributes: {token => "RPAREN_SCOPE"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "directAbstractDeclarator"}
    |    |--- rhs. Attributes: {token => "LPAREN_SCOPE"}
    |    |--- rhs. Attributes: {token => "parameterTypeList"}
    |    |--- rhs. Attributes: {token => "RPAREN_SCOPE"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "initializer"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "LCURLY"}
    |    |--- rhs. Attributes: {token => "initializerList"}
    |    |--- rhs. Attributes: {token => "RCURLY"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LCURLY"}
    |    |--- rhs. Attributes: {token => "initializerList"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "RCURLY"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "initializerList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "designation"}
    |    |--- rhs. Attributes: {token => "initializer"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "initializer"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- rhs. Attributes: {token => "initializer"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "initializerList"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "designation"}
    |    |--- rhs. Attributes: {token => "initializer"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "initializerList"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "initializer"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "designation"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "designatorList"}
    |    |--- rhs. Attributes: {token => "EQUAL"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "designatorList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "designator"}
    |         |--- quantifier. Attributes: {token => "+"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "designator"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "constantExpression"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "DOT"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER_UNAMBIGUOUS"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "constantExpression"}
    |    |--- rhs. Attributes: {token => "ELLIPSIS"}
    |    |--- rhs. Attributes: {token => "constantExpression"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "staticAssertDeclaration"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "STATIC_ASSERT"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "constantExpression"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "stringLiteral"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- rhs. Attributes: {token => "SEMICOLON"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "statement"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "labeledStatement"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "compoundStatement"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "expressionStatement"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "selectionStatement"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "iterationStatement"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "jumpStatement"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "opaqueAsmStatement"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "gccAsmStatement"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "labeledStatement"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- rhs. Attributes: {token => "statement"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "CASE"}
    |    |--- rhs. Attributes: {token => "constantExpression"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- rhs. Attributes: {token => "statement"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "DEFAULT"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- rhs. Attributes: {token => "statement"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "compoundStatement"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "LCURLY_SCOPE"}
    |    |--- rhs. Attributes: {token => "RCURLY_SCOPE"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LCURLY_SCOPE"}
    |    |--- rhs. Attributes: {token => "blockItemList"}
    |    |--- rhs. Attributes: {token => "RCURLY_SCOPE"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "blockItemList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "blockItem"}
    |         |--- quantifier. Attributes: {token => "+"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "blockItem"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "declaration"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "statement"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "expressionStatement"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "SEMICOLON"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "SEMICOLON"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "selectionStatement"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "IF"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- rhs. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "ELSE"}
    |    |--- rhs. Attributes: {token => "statement"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "IF"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- rhs. Attributes: {token => "statement"}
    |    |--- rank_specification. Attributes: {token => "rank_specification"}
    |    |    |--- rank. Attributes: {token => "1"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rank. Attributes: {token => "SWITCH"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- rhs. Attributes: {token => "statement"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "iterationStatement"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "WHILE"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- rhs. Attributes: {token => "statement"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "DO"}
    |    |--- rhs. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "WHILE"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- rhs. Attributes: {token => "SEMICOLON"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "FOR"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "expressionStatement"}
    |    |--- rhs. Attributes: {token => "expressionStatement"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- rhs. Attributes: {token => "statement"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "FOR"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "expressionStatement"}
    |    |--- rhs. Attributes: {token => "expressionStatement"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- rhs. Attributes: {token => "statement"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "FOR"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "declaration"}
    |    |--- rhs. Attributes: {token => "expressionStatement"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- rhs. Attributes: {token => "statement"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "FOR"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "declaration"}
    |    |--- rhs. Attributes: {token => "expressionStatement"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- rhs. Attributes: {token => "statement"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "jumpStatement"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "GOTO"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER_UNAMBIGUOUS"}
    |    |--- rhs. Attributes: {token => "SEMICOLON"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "CONTINUE"}
    |    |--- rhs. Attributes: {token => "SEMICOLON"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "BREAK"}
    |    |--- rhs. Attributes: {token => "SEMICOLON"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "RETURN"}
    |    |--- rhs. Attributes: {token => "SEMICOLON"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "RETURN"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "SEMICOLON"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "<translationUnit>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "translationUnit"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "externalDeclaration"}
    |         |--- quantifier. Attributes: {token => "+"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "<externalDeclaration>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "externalDeclaration"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "functionDefinition"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "declaration"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "compoundStatementReenterScope"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "LCURLY_REENTERSCOPE"}
    |    |--- rhs. Attributes: {token => "RCURLY_SCOPE"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LCURLY_REENTERSCOPE"}
    |    |--- rhs. Attributes: {token => "blockItemList"}
    |    |--- rhs. Attributes: {token => "RCURLY_SCOPE"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "functionDefinition"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "functionDefinitionCheck1"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "functionDefinitionCheck2"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "<fileScopeDeclarator>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "fileScopeDeclarator"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "declarator"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "<functionDefinitionCheck1>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "functionDefinitionCheck1"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "functionDefinitionCheck1declarationSpecifiers"}
    |    |--- rhs. Attributes: {token => "fileScopeDeclarator"}
    |    |--- rhs. Attributes: {token => "functionDefinitionCheck1declarationList"}
    |    |--- rhs. Attributes: {token => "compoundStatementReenterScope"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "<functionDefinitionCheck2>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "functionDefinitionCheck2"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "functionDefinitionCheck2declarationSpecifiers"}
    |    |--- rhs. Attributes: {token => "fileScopeDeclarator"}
    |    |--- rhs. Attributes: {token => "compoundStatementReenterScope"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "<functionDefinitionCheck1declarationSpecifiers>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "functionDefinitionCheck1declarationSpecifiers"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "<functionDefinitionCheck2declarationSpecifiers>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "functionDefinitionCheck2declarationSpecifiers"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "declarationSpecifiers"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "<functionDefinitionCheck1declarationList>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "functionDefinitionCheck1declarationList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "declarationList"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "declarationList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "declaration"}
    |         |--- quantifier. Attributes: {token => "+"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "O"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[0-7]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "O_any"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "O"}
    |         |--- quantifier. Attributes: {token => "*"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "D"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[0-9]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "D_any"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "D"}
    |         |--- quantifier. Attributes: {token => "*"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "D_many"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "D"}
    |         |--- quantifier. Attributes: {token => "+"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "NZ"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[1-9]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "L"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[a-zA-Z_]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "A"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[a-zA-Z_0-9]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "A_any"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "A"}
    |         |--- quantifier. Attributes: {token => "*"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "H"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[a-fA-F0-9]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "H_any"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "H"}
    |         |--- quantifier. Attributes: {token => "*"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "H_many"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "H"}
    |         |--- quantifier. Attributes: {token => "+"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "HP"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'0'"}
    |    |--- rhs. Attributes: {token => "[xX]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "B"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[0-1]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "B_many"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "B"}
    |         |--- quantifier. Attributes: {token => "+"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "BP"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'0'"}
    |    |--- rhs. Attributes: {token => "[bB]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "SIGN_maybe"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[+-]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "SIGN_maybe"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "E"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[Ee]"}
    |    |--- rhs. Attributes: {token => "SIGN_maybe"}
    |    |--- rhs. Attributes: {token => "D_many"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "E_maybe"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "E"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "E_maybe"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "P"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[Pp]"}
    |    |--- rhs. Attributes: {token => "SIGN_maybe"}
    |    |--- rhs. Attributes: {token => "D_many"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "FS"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[fFlL]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "FS_maybe"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "FS"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "FS_maybe"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "LL"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'ll'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'LL'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "[lL]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "LL_maybe"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "LL"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "LL_maybe"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "U"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[uU]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "U_maybe"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "U"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "U_maybe"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "IS"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "U"}
    |    |--- rhs. Attributes: {token => "LL_maybe"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "LL"}
    |    |--- rhs. Attributes: {token => "U_maybe"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "IS_maybe"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "IS"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "IS_maybe"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "CP"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[uUL]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "CP_maybe"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "CP"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "CP_maybe"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "SP"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'u8'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "[uUL]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "SP_maybe"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "SP"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- rhs. Attributes: {token => "SP_maybe"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "ES_AFTERBS"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[\'\"\?\\abfnrtv]"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "O"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "O"}
    |    |--- rhs. Attributes: {token => "O"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "O"}
    |    |--- rhs. Attributes: {token => "O"}
    |    |--- rhs. Attributes: {token => "O"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'x'"}
    |    |--- rhs. Attributes: {token => "H_many"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "ES"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "BS"}
    |    |--- rhs. Attributes: {token => "ES_AFTERBS"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "WS"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[ \t\v\n\f]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "WS_any"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS"}
    |         |--- quantifier. Attributes: {token => "*"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "WS_many"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS"}
    |         |--- quantifier. Attributes: {token => "+"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<AUTO>"}
    |         |--- priority. Attributes: {token => "-1"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "AUTO"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'auto'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<BREAK>"}
    |         |--- priority. Attributes: {token => "-2"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "BREAK"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'break'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<CASE>"}
    |         |--- priority. Attributes: {token => "-3"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "CASE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'case'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<CHAR>"}
    |         |--- priority. Attributes: {token => "-4"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "CHAR"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'char'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<CONST>"}
    |         |--- priority. Attributes: {token => "-5"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "CONST"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'const'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "CONST"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__const'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "CONST"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'const__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "CONST"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__const__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<CONTINUE>"}
    |         |--- priority. Attributes: {token => "-6"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "CONTINUE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'continue'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<DEFAULT>"}
    |         |--- priority. Attributes: {token => "-7"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "DEFAULT"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'default'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<DO>"}
    |         |--- priority. Attributes: {token => "-8"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "DO"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'do'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<DOUBLE>"}
    |         |--- priority. Attributes: {token => "-9"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "DOUBLE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'double'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<ELSE>"}
    |         |--- priority. Attributes: {token => "-10"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "ELSE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'else'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<ENUM>"}
    |         |--- priority. Attributes: {token => "-11"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "ENUM"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'enum'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<EXTERN>"}
    |         |--- priority. Attributes: {token => "-12"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "EXTERN"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'extern'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<FLOAT>"}
    |         |--- priority. Attributes: {token => "-13"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "FLOAT"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'float'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<FOR>"}
    |         |--- priority. Attributes: {token => "-14"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "FOR"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'for'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<GOTO>"}
    |         |--- priority. Attributes: {token => "-15"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "GOTO"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'goto'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<IF>"}
    |         |--- priority. Attributes: {token => "-16"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "IF"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'if'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<INLINE>"}
    |         |--- priority. Attributes: {token => "-17"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "INLINE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'inline'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "INLINE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__inline__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "INLINE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'inline__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "INLINE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__inline'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "INLINE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__forceinline'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<INT>"}
    |         |--- priority. Attributes: {token => "-18"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "INT"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'int'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<LONG>"}
    |         |--- priority. Attributes: {token => "-19"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "LONG"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'long'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<REGISTER>"}
    |         |--- priority. Attributes: {token => "-20"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "REGISTER"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'register'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<RESTRICT>"}
    |         |--- priority. Attributes: {token => "-21"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "RESTRICT"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'restrict'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "RESTRICT"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__restrict'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "RESTRICT"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'restrict__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "RESTRICT"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__restrict__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<RETURN>"}
    |         |--- priority. Attributes: {token => "-22"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "RETURN"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'return'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<SHORT>"}
    |         |--- priority. Attributes: {token => "-23"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "SHORT"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'short'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<SIGNED>"}
    |         |--- priority. Attributes: {token => "-24"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "SIGNED"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'signed'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "SIGNED"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__signed'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "SIGNED"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__signed__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<SIZEOF>"}
    |         |--- priority. Attributes: {token => "-25"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "SIZEOF"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'sizeof'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<STATIC>"}
    |         |--- priority. Attributes: {token => "-26"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "STATIC"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'static'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<STRUCT>"}
    |         |--- priority. Attributes: {token => "-27"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "STRUCT"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'struct'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<SWITCH>"}
    |         |--- priority. Attributes: {token => "-28"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "SWITCH"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'switch'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<TYPEDEF>"}
    |         |--- priority. Attributes: {token => "-29"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "TYPEDEF"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'typedef'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<UNION>"}
    |         |--- priority. Attributes: {token => "-30"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "UNION"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'union'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<UNSIGNED>"}
    |         |--- priority. Attributes: {token => "-31"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "UNSIGNED"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'unsigned'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "UNSIGNED"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__unsigned'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "UNSIGNED"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__unsigned__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<VOID>"}
    |         |--- priority. Attributes: {token => "-32"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "VOID"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'void'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<VOLATILE>"}
    |         |--- priority. Attributes: {token => "-33"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "VOLATILE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'volatile'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "VOLATILE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__volatile'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "VOLATILE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'volatile__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "VOLATILE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__volatile__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<WHILE>"}
    |         |--- priority. Attributes: {token => "-34"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "WHILE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'while'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<ALIGNAS>"}
    |         |--- priority. Attributes: {token => "-35"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "ALIGNAS"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'_Alignas'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<ALIGNOF>"}
    |         |--- priority. Attributes: {token => "-36"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "ALIGNOF"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'_Alignof'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<ATOMIC>"}
    |         |--- priority. Attributes: {token => "-37"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "ATOMIC"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'_Atomic'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<BOOL>"}
    |         |--- priority. Attributes: {token => "-38"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "BOOL"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'_Bool'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<LABEL>"}
    |         |--- priority. Attributes: {token => "-38"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "LABEL"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__label__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<COMPLEX>"}
    |         |--- priority. Attributes: {token => "-39"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "COMPLEX"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'_Complex'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "COMPLEX"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__complex'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "COMPLEX"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__complex__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<GENERIC>"}
    |         |--- priority. Attributes: {token => "-40"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "GENERIC"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'_Generic'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<IMAGINARY>"}
    |         |--- priority. Attributes: {token => "-41"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "IMAGINARY"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'_Imaginary'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<NORETURN>"}
    |         |--- priority. Attributes: {token => "-42"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "NORETURN"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'_Noreturn'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<STATIC_ASSERT>"}
    |         |--- priority. Attributes: {token => "-43"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "STATIC_ASSERT"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'_Static_assert'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<THREAD_LOCAL>"}
    |         |--- priority. Attributes: {token => "-44"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "THREAD_LOCAL"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'_Thread_local'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "THREAD_LOCAL"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__thread'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<FUNC_NAME>"}
    |         |--- priority. Attributes: {token => "-45"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "FUNC_NAME"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__func__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<TYPEDEF_NAME>"}
    |         |--- priority. Attributes: {token => "-100"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<ENUMERATION_CONSTANT>"}
    |         |--- priority. Attributes: {token => "-100"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<IDENTIFIER>"}
    |         |--- priority. Attributes: {token => "-100"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<IDENTIFIER_UNAMBIGUOUS>"}
    |         |--- priority. Attributes: {token => "-100"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "_IDENTIFIER"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "L"}
    |    |--- rhs. Attributes: {token => "A_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "TYPEDEF_NAME"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "_IDENTIFIER"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "ENUMERATION_CONSTANT"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "_IDENTIFIER"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "IDENTIFIER"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "_IDENTIFIER"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "IDENTIFIER_UNAMBIGUOUS"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "_IDENTIFIER"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<I_CONSTANT>"}
    |         |--- priority. Attributes: {token => "-101"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "I_CONSTANT"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "HP"}
    |    |--- rhs. Attributes: {token => "H_many"}
    |    |--- rhs. Attributes: {token => "IS_maybe"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "BP"}
    |    |--- rhs. Attributes: {token => "B_many"}
    |    |--- rhs. Attributes: {token => "IS_maybe"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "NZ"}
    |    |--- rhs. Attributes: {token => "D_any"}
    |    |--- rhs. Attributes: {token => "IS_maybe"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'0'"}
    |    |--- rhs. Attributes: {token => "O_any"}
    |    |--- rhs. Attributes: {token => "IS_maybe"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "CP_maybe"}
    |    |--- rhs. Attributes: {token => "QUOTE"}
    |    |--- rhs. Attributes: {token => "I_CONSTANT_INSIDE_many"}
    |    |--- rhs. Attributes: {token => "QUOTE"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<F_CONSTANT>"}
    |         |--- priority. Attributes: {token => "-102"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "F_CONSTANT"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "D_many"}
    |    |--- rhs. Attributes: {token => "E"}
    |    |--- rhs. Attributes: {token => "FS_maybe"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "D_any"}
    |    |--- rhs. Attributes: {token => "'.'"}
    |    |--- rhs. Attributes: {token => "D_many"}
    |    |--- rhs. Attributes: {token => "E_maybe"}
    |    |--- rhs. Attributes: {token => "FS_maybe"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "D_many"}
    |    |--- rhs. Attributes: {token => "'.'"}
    |    |--- rhs. Attributes: {token => "E_maybe"}
    |    |--- rhs. Attributes: {token => "FS_maybe"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "HP"}
    |    |--- rhs. Attributes: {token => "H_many"}
    |    |--- rhs. Attributes: {token => "P"}
    |    |--- rhs. Attributes: {token => "FS_maybe"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "HP"}
    |    |--- rhs. Attributes: {token => "H_any"}
    |    |--- rhs. Attributes: {token => "'.'"}
    |    |--- rhs. Attributes: {token => "H_many"}
    |    |--- rhs. Attributes: {token => "P"}
    |    |--- rhs. Attributes: {token => "FS_maybe"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "HP"}
    |    |--- rhs. Attributes: {token => "H_many"}
    |    |--- rhs. Attributes: {token => "'.'"}
    |    |--- rhs. Attributes: {token => "P"}
    |    |--- rhs. Attributes: {token => "FS_maybe"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<STRING_LITERAL_UNIT>"}
    |         |--- priority. Attributes: {token => "-103"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "STRING_LITERAL_INSIDE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[^"\\\n]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "STRING_LITERAL_INSIDE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "ES"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "STRING_LITERAL_INSIDE_any"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "STRING_LITERAL_INSIDE"}
    |         |--- quantifier. Attributes: {token => "*"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "STRING_LITERAL_UNIT"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "SP_maybe"}
    |    |--- rhs. Attributes: {token => "'"'"}
    |    |--- rhs. Attributes: {token => "STRING_LITERAL_INSIDE_any"}
    |    |--- rhs. Attributes: {token => "'"'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<ELLIPSIS>"}
    |         |--- priority. Attributes: {token => "-104"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "ELLIPSIS"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'...'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<RIGHT_ASSIGN>"}
    |         |--- priority. Attributes: {token => "-105"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "RIGHT_ASSIGN"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'>>='"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<LEFT_ASSIGN>"}
    |         |--- priority. Attributes: {token => "-106"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "LEFT_ASSIGN"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'<<='"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<ADD_ASSIGN>"}
    |         |--- priority. Attributes: {token => "-107"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "ADD_ASSIGN"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'+='"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<SUB_ASSIGN>"}
    |         |--- priority. Attributes: {token => "-108"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "SUB_ASSIGN"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'-='"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<MUL_ASSIGN>"}
    |         |--- priority. Attributes: {token => "-109"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "MUL_ASSIGN"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'*='"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<DIV_ASSIGN>"}
    |         |--- priority. Attributes: {token => "-110"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "DIV_ASSIGN"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'/='"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<MOD_ASSIGN>"}
    |         |--- priority. Attributes: {token => "-111"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "MOD_ASSIGN"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'%='"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<AND_ASSIGN>"}
    |         |--- priority. Attributes: {token => "-112"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "AND_ASSIGN"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'&='"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<XOR_ASSIGN>"}
    |         |--- priority. Attributes: {token => "-113"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "XOR_ASSIGN"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'^='"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<OR_ASSIGN>"}
    |         |--- priority. Attributes: {token => "-114"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "OR_ASSIGN"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'|='"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<RIGHT_OP>"}
    |         |--- priority. Attributes: {token => "-115"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "RIGHT_OP"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'>>'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<LEFT_OP>"}
    |         |--- priority. Attributes: {token => "-116"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "LEFT_OP"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'<<'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<INC_OP>"}
    |         |--- priority. Attributes: {token => "-117"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "INC_OP"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'++'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<DEC_OP>"}
    |         |--- priority. Attributes: {token => "-118"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "DEC_OP"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'--'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<PTR_OP>"}
    |         |--- priority. Attributes: {token => "-119"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "PTR_OP"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'->'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<AND_OP>"}
    |         |--- priority. Attributes: {token => "-120"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "AND_OP"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'&&'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<OR_OP>"}
    |         |--- priority. Attributes: {token => "-121"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "OR_OP"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'||'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<LE_OP>"}
    |         |--- priority. Attributes: {token => "-122"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "LE_OP"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'<='"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<GE_OP>"}
    |         |--- priority. Attributes: {token => "-123"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "GE_OP"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'>='"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<EQ_OP>"}
    |         |--- priority. Attributes: {token => "-124"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "EQ_OP"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'=='"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<NE_OP>"}
    |         |--- priority. Attributes: {token => "-125"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "NE_OP"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'!='"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<SEMICOLON>"}
    |         |--- priority. Attributes: {token => "-126"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "SEMICOLON"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "';'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "_LCURLY"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'{'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'<%'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<LCURLY>"}
    |         |--- priority. Attributes: {token => "-127"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<LCURLY_SCOPE>"}
    |         |--- priority. Attributes: {token => "-127"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<LCURLY_REENTERSCOPE>"}
    |         |--- priority. Attributes: {token => "-127"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "LCURLY"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "_LCURLY"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "LCURLY_SCOPE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "_LCURLY"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "LCURLY_REENTERSCOPE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "_LCURLY"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "_RCURLY"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'}'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'%>'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<RCURLY>"}
    |         |--- priority. Attributes: {token => "-128"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<RCURLY_SCOPE>"}
    |         |--- priority. Attributes: {token => "-128"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "RCURLY"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "_RCURLY"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "RCURLY_SCOPE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "_RCURLY"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<COMMA>"}
    |         |--- priority. Attributes: {token => "-129"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "COMMA"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "','"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<COLON>"}
    |         |--- priority. Attributes: {token => "-130"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "COLON"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "':'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<EQUAL>"}
    |         |--- priority. Attributes: {token => "-131"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "EQUAL"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'='"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "_LPAREN"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'('"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<LPAREN>"}
    |         |--- priority. Attributes: {token => "-132"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<LPAREN_SCOPE>"}
    |         |--- priority. Attributes: {token => "-132"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "LPAREN"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "_LPAREN"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "LPAREN_SCOPE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "_LPAREN"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "_RPAREN"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "')'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<RPAREN>"}
    |         |--- priority. Attributes: {token => "-133"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<RPAREN_SCOPE>"}
    |         |--- priority. Attributes: {token => "-133"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "RPAREN"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "_RPAREN"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "RPAREN_SCOPE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "_RPAREN"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<LBRACKET>"}
    |         |--- priority. Attributes: {token => "-134"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "LBRACKET"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'['"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'<:'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<RBRACKET>"}
    |         |--- priority. Attributes: {token => "-135"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "RBRACKET"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "']'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "':>'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<DOT>"}
    |         |--- priority. Attributes: {token => "-136"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "DOT"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'.'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<AMPERSAND>"}
    |         |--- priority. Attributes: {token => "-137"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "AMPERSAND"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'&'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<EXCLAMATION>"}
    |         |--- priority. Attributes: {token => "-138"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "EXCLAMATION"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'!'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<TILDE>"}
    |         |--- priority. Attributes: {token => "-139"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "TILDE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'~'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<HYPHEN>"}
    |         |--- priority. Attributes: {token => "-140"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "HYPHEN"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'-'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<PLUS>"}
    |         |--- priority. Attributes: {token => "-141"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "PLUS"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'+'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<STAR>"}
    |         |--- priority. Attributes: {token => "-142"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "STAR"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'*'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<SLASH>"}
    |         |--- priority. Attributes: {token => "-143"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "SLASH"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'/'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<PERCENT>"}
    |         |--- priority. Attributes: {token => "-144"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "PERCENT"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'%'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<LESS_THAN>"}
    |         |--- priority. Attributes: {token => "-145"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "LESS_THAN"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'<'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<GREATER_THAN>"}
    |         |--- priority. Attributes: {token => "-146"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "GREATER_THAN"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'>'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<CARET>"}
    |         |--- priority. Attributes: {token => "-147"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "CARET"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'^'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<VERTICAL_BAR>"}
    |         |--- priority. Attributes: {token => "-148"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "VERTICAL_BAR"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'|'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<QUESTION_MARK>"}
    |         |--- priority. Attributes: {token => "-149"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "QUESTION_MARK"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'?'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<C style comment>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'/*'"}
    |    |--- rhs. Attributes: {token => "<comment interior>"}
    |    |--- rhs. Attributes: {token => "'*/'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<comment interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<optional non stars>"}
    |    |--- rhs. Attributes: {token => "<optional star prefixed segments>"}
    |    |--- rhs. Attributes: {token => "<optional pre final stars>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<optional non stars>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[^*]"}
    |         |--- quantifier. Attributes: {token => "*"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<optional star prefixed segments>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<star prefixed segment>"}
    |         |--- quantifier. Attributes: {token => "*"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<star prefixed segment>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<stars>"}
    |    |--- rhs. Attributes: {token => "[^/*]"}
    |    |--- rhs. Attributes: {token => "<optional star free text>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<stars>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[*]"}
    |         |--- quantifier. Attributes: {token => "+"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<optional star free text>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[^*]"}
    |         |--- quantifier. Attributes: {token => "*"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<optional pre final stars>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[*]"}
    |         |--- quantifier. Attributes: {token => "*"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<Cplusplus style comment>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'//'"}
    |    |--- rhs. Attributes: {token => "<Cplusplus comment interior>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<Cplusplus comment interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[^\n]"}
    |         |--- quantifier. Attributes: {token => "*"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS annotation directive start>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'[source_annotation_attribute'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS annotation directive interior single line>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[^\n]"}
    |         |--- quantifier. Attributes: {token => "*"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS annotation directive>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS annotation directive start>"}
    |    |--- rhs. Attributes: {token => "<MSVS annotation directive interior single line>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "QUOTE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[']"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "I_CONSTANT_INSIDE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[^'\\\n]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "I_CONSTANT_INSIDE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "ES"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "I_CONSTANT_INSIDE_many"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "I_CONSTANT_INSIDE"}
    |         |--- quantifier. Attributes: {token => "+"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "BS"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'\'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "ANYTHING_ELSE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[.]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":discard"}
    |    |--- rhs. Attributes: {token => "<Cplusplus style comment>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":discard"}
    |    |--- rhs. Attributes: {token => "<C style comment>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":discard"}
    |    |--- rhs. Attributes: {token => "<MSVS annotation directive>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":discard"}
    |    |--- rhs. Attributes: {token => "WS_many"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":discard"}
    |    |--- rhs. Attributes: {token => "ANYTHING_ELSE"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<GCC_ASM>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<ANY_ASM>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "_ASM"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'asm__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "_ASM"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__asm'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "_ASM"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__asm__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "_ASM"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'asm'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "GCC_ASM"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "_ASM"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "ANY_ASM"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "_ASM"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "ASM_OPAQUE"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[^\s\S]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<GCC_EXTENSION>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "GCC_EXTENSION"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'extension__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "GCC_EXTENSION"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__extension'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "GCC_EXTENSION"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__extension__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<GCC_BUILTIN_VA_START>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "GCC_BUILTIN_VA_START"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__builtin_va_start'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<GCC_BUILTIN_VA_END>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "GCC_BUILTIN_VA_END"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__builtin_va_end'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<GCC_BUILTIN_VA_ARG>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "GCC_BUILTIN_VA_ARG"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__builtin_va_arg'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<GCC_TYPEOF>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "GCC_TYPEOF"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'typeof'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "GCC_TYPEOF"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__typeof'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "GCC_TYPEOF"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__typeof__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<GCC_BUILTIN_OFFSETOF>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "GCC_BUILTIN_OFFSETOF"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__builtin_offsetof'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<GCC_BUILTIN_VA_LIST>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "GCC_BUILTIN_VA_LIST"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__builtin_va_list'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "GCC_ALIGNOF"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__alignof__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "GCC_ALIGNOF"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'alignof__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "GCC_ALIGNOF"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__alignof'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "GCC_ALIGNOF"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'alignof'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS_FASTCALL>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "MSVS_FASTCALL"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__fastcall'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS_THISCALL>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "MSVS_THISCALL"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__thiscall'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS_BASED>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "MSVS_BASED"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__based'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS_CDECL>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "MSVS_CDECL"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__cdecl'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS_CLRCALL>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "MSVS_CLRCALL"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__clrcall'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS___C_ASSERT__>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "MSVS___C_ASSERT__"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__C_ASSERT__'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS_STDCALL>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "MSVS_STDCALL"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__stdcall'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS_INT8>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "MSVS_INT8"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__int8'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS_INT16>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "MSVS_INT16"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__int16'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS_INT32>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "MSVS_INT32"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__int32'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS_INT64>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "MSVS_INT64"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__int64'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS_W64>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "MSVS_W64"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__w64'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS_PTR32>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "MSVS_PTR32"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__ptr32'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS_PTR64>"}
    |         |--- priority. Attributes: {token => "-60"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "MSVS_PTR64"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__ptr64'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccBuiltinType"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "gccTypeof"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "GCC_BUILTIN_VA_LIST"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccAsmStatement"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "gccAsmExpression"}
    |    |--- rhs. Attributes: {token => "SEMICOLON"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccAsmExpression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "GCC_ASM"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "GCC_ASM"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "GCC_ASM"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "gccAsmInnerOperandList"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "GCC_ASM"}
    |    |--- rhs. Attributes: {token => "typeQualifier"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "GCC_ASM"}
    |    |--- rhs. Attributes: {token => "typeQualifier"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "gccAsmInnerOperandList"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "GCC_ASM"}
    |    |--- rhs. Attributes: {token => "GOTO"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "gccAsmInnerOperandList"}
    |    |--- rhs. Attributes: {token => "gccAsmInnerLabelList"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccAsmClobberList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "gccAsmClobber"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "gccAsmClobberList"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "gccAsmClobber"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccAsmOperandList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "gccAsmOperand"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "gccAsmOperandList"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "gccAsmOperand"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccAsmInnerClobberList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- rhs. Attributes: {token => "gccAsmClobberList"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccAsmInnerOperandList2"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- rhs. Attributes: {token => "gccAsmInnerClobberList"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- rhs. Attributes: {token => "gccAsmOperandList"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- rhs. Attributes: {token => "gccAsmOperandList"}
    |    |--- rhs. Attributes: {token => "gccAsmInnerClobberList"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccAsmInnerOperandList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- rhs. Attributes: {token => "gccAsmInnerOperandList2"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- rhs. Attributes: {token => "gccAsmOperandList"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- rhs. Attributes: {token => "gccAsmOperandList"}
    |    |--- rhs. Attributes: {token => "gccAsmInnerOperandList2"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccAsmInnerLabelList"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "COLON"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER_UNAMBIGUOUS"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "gccAsmInnerLabelList"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER_UNAMBIGUOUS"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccAsmOperandPrefix"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER_UNAMBIGUOUS"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccAsmOperand"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "string"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "gccAsmOperandPrefix"}
    |    |--- rhs. Attributes: {token => "string"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccAsmClobber"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "string"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccStatementExpression"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "compoundStatement"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccArrayTypeModifier"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "typeQualifier"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccBuiltinVaStart"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "GCC_BUILTIN_VA_START"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccBuiltinVaEnd"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "GCC_BUILTIN_VA_END"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccBuiltinVaArg"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "GCC_BUILTIN_VA_ARG"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "typeName"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccTypeof"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "GCC_TYPEOF"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "typeName"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "GCC_TYPEOF"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "assignmentExpression"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "gccBuiltinOffsetof"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "GCC_BUILTIN_OFFSETOF"}
    |    |--- rhs. Attributes: {token => "LPAREN"}
    |    |--- rhs. Attributes: {token => "typeName"}
    |    |--- rhs. Attributes: {token => "COMMA"}
    |    |--- rhs. Attributes: {token => "offsetofMemberDesignator"}
    |    |--- rhs. Attributes: {token => "RPAREN"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "offsetofMemberDesignator"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER_UNAMBIGUOUS"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "offsetofMemberDesignator"}
    |    |--- rhs. Attributes: {token => "DOT"}
    |    |--- rhs. Attributes: {token => "IDENTIFIER_UNAMBIGUOUS"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "offsetofMemberDesignator"}
    |    |--- rhs. Attributes: {token => "LBRACKET"}
    |    |--- rhs. Attributes: {token => "expression"}
    |    |--- rhs. Attributes: {token => "RBRACKET"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "msvsAttribute"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "MSVS_FASTCALL"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "MSVS_BASED"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "MSVS_CDECL"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "MSVS_CLRCALL"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "MSVS_STDCALL"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "MSVS_THISCALL"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "msvsBuiltinType"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "MSVS_INT8"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "MSVS_INT16"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "MSVS_INT32"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "MSVS_INT64"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "opaqueAsmStatement"}
    |    |--- op_declare_bnf. Attributes: {token => "bnf"}
    |    |--- rhs. Attributes: {token => "ANY_ASM"}
    |    |--- rhs. Attributes: {token => "ASM_OPAQUE"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<Cpp style directive start>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'#'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<Cpp style directive interior single line>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[^\n]"}
    |         |--- quantifier. Attributes: {token => "*"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<Cpp style directive>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<Cpp style directive start>"}
    |    |--- rhs. Attributes: {token => "<Cpp style directive interior single line>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":discard"}
    |    |--- rhs. Attributes: {token => "<Cpp style directive>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 identifier>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "_IDENTIFIER"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<_G0 number>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[\d]"}
    |         |--- quantifier. Attributes: {token => "+"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 number>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "<_G0 number>"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 string unit>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'"'"}
    |    |--- rhs. Attributes: {token => "STRING_LITERAL_INSIDE_any"}
    |    |--- rhs. Attributes: {token => "'"'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 string>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 string unit>"}
    |         |--- quantifier. Attributes: {token => "+"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<_G0 word>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[\w]"}
    |         |--- quantifier. Attributes: {token => "+"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 word>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "<_G0 word>"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 words>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 word>"}
    |         |--- quantifier. Attributes: {token => "+"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "STRING_LITERAL_INSIDE2"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "[^<>\\\n]"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "STRING_LITERAL_INSIDE2"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "ES"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "STRING_LITERAL_INSIDE2_any"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "STRING_LITERAL_INSIDE2"}
    |         |--- quantifier. Attributes: {token => "*"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 string unit 2>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'<'"}
    |    |--- rhs. Attributes: {token => "STRING_LITERAL_INSIDE2_any"}
    |    |--- rhs. Attributes: {token => "'>'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 string 2>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 string unit 2>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 mul assign>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'*='"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 div assign>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'/='"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 mod assign>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'%='"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 add assign>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'+='"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 sub assign>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'-='"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 left assign>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'<<='"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 right assign>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'>>='"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 and assign>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'&='"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 xor assign>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'^='"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 or assign>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'|='"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 or op>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'||'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 and op>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'&&'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 vertical bar>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'|'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 caret>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'^'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 ampersand>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'&'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 eq op>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'=='"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 ne op>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'!='"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 less than>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'<'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 greater than>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'>'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 le op>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'<='"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 ge op>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'>='"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 left op>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'<<'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 right op>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'>>'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 plus>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'+'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 hyphen>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'-'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 star>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'*'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 slash>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'/'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 percent>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'%'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 lparen>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'('"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 rparen>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "')'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 lcurly>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'{'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 rcurly>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'}'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 lbracket>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'['"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 rbracket>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "']'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 inc op>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'++'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 dec op>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'--'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 ptr op>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'->'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 dot>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'.'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 exclamation>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'!'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 tilde>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'~'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 generic>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'_Generic'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 default>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'default'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 ellipsis>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'...'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 sizeof>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'sizeof'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 alignof>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'_Alignof'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'__alignof__'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'alignof__'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'__alignof'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'alignof'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 comma>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "','"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 equal>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'='"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 colon>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "':'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 semicolon>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "';'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 question mark>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'?'"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 I_CONSTANT>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "HP"}
    |    |--- rhs. Attributes: {token => "H_many"}
    |    |--- rhs. Attributes: {token => "IS_maybe"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "BP"}
    |    |--- rhs. Attributes: {token => "B_many"}
    |    |--- rhs. Attributes: {token => "IS_maybe"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "NZ"}
    |    |--- rhs. Attributes: {token => "D_any"}
    |    |--- rhs. Attributes: {token => "IS_maybe"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'0'"}
    |    |--- rhs. Attributes: {token => "O_any"}
    |    |--- rhs. Attributes: {token => "IS_maybe"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "CP_maybe"}
    |    |--- rhs. Attributes: {token => "QUOTE"}
    |    |--- rhs. Attributes: {token => "I_CONSTANT_INSIDE_many"}
    |    |--- rhs. Attributes: {token => "QUOTE"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 F_CONSTANT>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "D_many"}
    |    |--- rhs. Attributes: {token => "E"}
    |    |--- rhs. Attributes: {token => "FS_maybe"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "D_any"}
    |    |--- rhs. Attributes: {token => "'.'"}
    |    |--- rhs. Attributes: {token => "D_many"}
    |    |--- rhs. Attributes: {token => "E_maybe"}
    |    |--- rhs. Attributes: {token => "FS_maybe"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "D_many"}
    |    |--- rhs. Attributes: {token => "'.'"}
    |    |--- rhs. Attributes: {token => "E_maybe"}
    |    |--- rhs. Attributes: {token => "FS_maybe"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "HP"}
    |    |--- rhs. Attributes: {token => "H_many"}
    |    |--- rhs. Attributes: {token => "P"}
    |    |--- rhs. Attributes: {token => "FS_maybe"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "HP"}
    |    |--- rhs. Attributes: {token => "H_any"}
    |    |--- rhs. Attributes: {token => "'.'"}
    |    |--- rhs. Attributes: {token => "H_many"}
    |    |--- rhs. Attributes: {token => "P"}
    |    |--- rhs. Attributes: {token => "FS_maybe"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "HP"}
    |    |--- rhs. Attributes: {token => "H_many"}
    |    |--- rhs. Attributes: {token => "'.'"}
    |    |--- rhs. Attributes: {token => "P"}
    |    |--- rhs. Attributes: {token => "FS_maybe"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 constant>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 I_CONSTANT>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 F_CONSTANT>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__pragma'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive alloc_text>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive auto_inline>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive common seg>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive check_stack>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive comment>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive component>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive conform>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive deprecated>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive detect_mismatch>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive fenv_access>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive float_control>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive fp_contract>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive function>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive hdrstop>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive include_alias>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive inline_depth>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive inline_recursion>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive intrinsic>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive loop>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive make_public>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive managed>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive unmanaged>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive message>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive once>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive optimize>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive pack>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive pointers_to_members>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive pop_macro>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive push_macro>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive region>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive endregion>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive runtime_checks>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive section>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive setlocale>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive strict_gs_check>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive vtordisp>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive warning>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive alloc_text>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'alloc_text'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive alloc_text interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive alloc_text interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive alloc_text interior>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive alloc_text identifier list>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive alloc_text identifier list>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive alloc_text identifier list>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive auto_inline>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'auto_inline'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'auto_inline'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive auto_inline interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive auto_inline interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'on'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'off'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive warning>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'warning'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive warning interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive warning interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive warning interior specifier list>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive warning interior push>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive warning interior pop>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive warning interior specifier list>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive warning interior specifier>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive warning interior specifier list>"}
    |    |--- rhs. Attributes: {token => "<G0 semicolon>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive warning interior specifier>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive warning interior specifier keyword>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'1'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'2'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'3'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'4'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'default'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'disable'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'error'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'once'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'suppress'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive warning interior specifier>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive warning interior specifier keyword>"}
    |    |--- rhs. Attributes: {token => "<G0 colon>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive warning interior specifier number list>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive warning interior specifier number list>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 number>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive warning interior specifier number list>"}
    |    |--- rhs. Attributes: {token => "WS_many"}
    |    |--- rhs. Attributes: {token => "<G0 number>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive warning interior push>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'push'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'push'"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 number>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive warning interior pop>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'pop'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive common seg push or pop>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'push'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'pop'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive common seg interior 1>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive common seg push or pop>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive common seg push or pop>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive common seg interior 2>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive common seg interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive common seg interior 1>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive common seg interior 2>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive common seg interior 1>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive common seg interior 2>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive common seg>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive common seg keyword>"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive common seg keyword>"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive common seg interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive common seg keyword>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'bss_seg'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'code_seg'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'const_seg'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'data_seg'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive check_stack interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'on'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'off'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'+'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'-'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive check_stack>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'check_stack'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'check_stack'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive check_stack interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive comment interior type>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'compiler'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'exestr'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'lib'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'linker'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'user'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive comment interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive comment interior type>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive comment interior type>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive comment>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'comment'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive comment interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive component interior name>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive component interior browser on off>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'on'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'off'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive component interior browser>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'browser'"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive component interior browser on off>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'browser'"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive component interior browser on off>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "'references'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'browser'"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive component interior browser on off>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "'references'"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive component interior name>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive component interior minrebuild>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'minrebuild'"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive component interior browser on off>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive component interior mintypeinfo>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'mintypeinfo'"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive component interior browser on off>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive component interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive component interior browser>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive component interior minrebuild>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive component interior mintypeinfo>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive component>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'component'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive component interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive conform interior name>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'forScope'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive conform interior show>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'show'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive conform interior on off>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'on'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'off'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive conform interior push pop>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'push'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'pop'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive conform interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive conform interior name>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive conform interior name>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive conform interior optional>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive conform interior optional unit>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive conform interior show>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive conform interior on off>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive conform interior push pop>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive conform interior optional>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive conform interior optional unit>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive conform interior optional>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive conform interior optional unit>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive conform>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'conform'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive conform interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive deprecated interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive deprecated interior>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive deprecated>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'deprecated'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive deprecated interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive detect_mismatch interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive detect_mismatch>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'detect_mismatch'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive detect_mismatch interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive fenv_access interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'on'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'ON'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'off'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'OFF'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive fenv_access>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'fenv_access'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'fenv_access'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'fenv_access'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive fenv_access interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive float_control interior value>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'precise'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'except'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive float_control interior setting>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'on'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'off'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive float_control interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive float_control interior value>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive float_control interior setting>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive float_control interior value>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive float_control interior setting>"}
    |    |--- rhs. Attributes: {token => "WS_any"}
    |    |--- rhs. Attributes: {token => "'push'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'push'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'pop'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive float_control>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'float_control'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive float_control interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive fp_contract interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'on'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'ON'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'off'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'OFF'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive fp_contract>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'fp_contract'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'fp_contract'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'fp_contract'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive fp_contract interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive function interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive function interior>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive function>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'function'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive function interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive hdrstop interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive hdrstop>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'hdrstop'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'hdrstop'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive hdrstop interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive include_alias interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 string 2>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 string 2>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive include_alias>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'include_alias'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive include_alias interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive inline_depth interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 number>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive inline_depth>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'inline_depth'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'inline_depth'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive inline_depth interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive inline_recursion interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'on'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'off'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive inline_recursion>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'inline_recursion'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'inline_recursion'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive inline_recursion interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive intrinsic interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive intrinsic interior>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive intrinsic>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'intrinsic'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive intrinsic interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive loop interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'hint_parallel'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 number>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'no_vector'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'ivdep'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive loop>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'loop'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive loop interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive make_public interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive make_public>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'make_public'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive make_public interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive managed interior on off>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'on'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'off'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive managed interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'push'"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive managed interior on off>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive managed interior on off>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'pop'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive managed>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'managed'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'managed'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'managed'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive managed interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive unmanaged>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'unmanaged'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'unmanaged'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive message interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive message>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'message'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive message interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive once>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'once'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'once'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive optimize interior optimizationList>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive optimize interior on off>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'on'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'off'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive optimize interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive optimize interior optimizationList>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive optimize interior on off>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive optimize>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'optimize'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive optimize interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive pack interior show>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'show'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive pack interior 1>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive pack interior show>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive pack interior push pop>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'push'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'pop'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive pack interior 21>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive pack interior push pop>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive pack interior push pop>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive pack interior 2>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 number>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive pack interior 21>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 number>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive pack interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive pack interior 1>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive pack interior 2>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive pack>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'pack'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'pack'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive pack interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive pointers_to_members interior pointer declaration>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'full_generality'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'best_case'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive pointers_to_members interior most general representation>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'single_inheritance'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'multiple_inheritance'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'virtual_inheritance'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive pointers_to_members interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive pointers_to_members interior pointer declaration>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive pointers_to_members interior pointer declaration>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive pointers_to_members interior most general representation>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive pointers_to_members>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'pointers_to_members'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive pointers_to_members interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive pop_macro>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'pop_macro'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive push_macro>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'push_macro'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive region interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive region>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'region'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'region'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'region'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive region interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive endregion interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive endregion>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'endregion'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'endregion'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'endregion'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive endregion interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive runtime_checks interior optimizationList>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive runtime_checks interior on off>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'restore'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'off'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive runtime_checks interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive runtime_checks interior optimizationList>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive runtime_checks interior on off>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive runtime_checks>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'runtime_checks'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive runtime_checks interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive section interior attribute>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'read'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'write'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'execute'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'shared'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'nopage'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'nocache'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'discard'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'remove'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive section interior attribute list>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive section interior attribute>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive section interior attribute list>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive section interior attribute>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive section interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive section interior attribute list>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive section>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'section'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive section interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive setlocale interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive setlocale>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'setlocale'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive setlocale interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive strict_gs_check interior on off>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'on'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'off'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive strict_gs_check interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive strict_gs_check interior on off>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'push'"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive strict_gs_check interior on off>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'pop'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive strict_gs_check>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'strict_gs_check'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive strict_gs_check interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive vtordisp interior on off number>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'on'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'off'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 number>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive vtordisp interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive vtordisp interior on off number>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'push'"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive vtordisp interior on off number>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'pop'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS pragma directive vtordisp>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'vtordisp'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'vtordisp'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'vtordisp'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma directive vtordisp interior>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":discard"}
    |    |--- rhs. Attributes: {token => "<MSVS pragma>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__declspec'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec directive>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec directive>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec align>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec allocate>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec appdomain>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec deprecated>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec dllexport>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec dllimport>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec jitintrinsic>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec naked>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec noalias>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec noinline>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec noreturn>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec nothrow>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec novtable>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec process>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec property>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec restrict>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec safebuffers>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec selectany>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec thread>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec uuid>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec align>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'align'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 number>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec allocate>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'allocate'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec appdomain>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'appdomain'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec deprecated>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'deprecated'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'deprecated'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'deprecated'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec dllexport>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'dllexport'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec dllimport>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'dllimport'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec jitintrinsic>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'jitintrinsic'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec naked>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'naked'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec noalias>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'noalias'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec noinline>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'noinline'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec noreturn>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'noreturn'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec nothrow>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'nothrow'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec novtable>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'novtable'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec process>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'process'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec property interior get put>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'get'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'put'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec property interior>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec property interior get put>"}
    |    |--- rhs. Attributes: {token => "<G0 equal>"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec property interior list>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec property interior>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec property interior list>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec property interior>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec property>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'property'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec property interior list>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec restrict>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'restrict'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec safebuffers>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'safebuffers'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec selectany>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'selectany'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec thread>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'thread'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<MSVS declspec uuid>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'uuid'"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => ":discard"}
    |    |--- rhs. Attributes: {token => "<MSVS declspec>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<GCC attribute keyword>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "'__attribute__'"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "'__attribute'"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<GCC attribute>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<GCC attribute keyword>"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<GCC attribute keyword>"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<GCC attribute list>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<GCC attribute list>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<GCC attribute unit>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<GCC attribute list>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<GCC attribute unit>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<GCC attribute unit>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 word>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 word>"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 word>"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<GCC attribute parameters>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<GCC attribute parameters>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<GCC attribute parameters expressions>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<GCC attribute parameters expressions>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<GCC attribute parameters expressions>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<GCC attribute parameters expression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<GCC attribute parameters expressions>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<GCC attribute parameters expression>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<GCC attribute parameters expression>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 expression>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 expression>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 assignmentExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 expression>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 assignmentExpression>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 assignmentExpression>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 conditionalExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 unaryExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 assignmentOperator>"}
    |    |--- rhs. Attributes: {token => "<G0 assignmentExpression>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 assignmentOperator>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 equal>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 mul assign>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 div assign>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 mod assign>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 add assign>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 sub assign>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 left assign>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 right assign>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 and assign>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 xor assign>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 or assign>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 conditionalExpression>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 logicalOrExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 logicalOrExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 question mark>"}
    |    |--- rhs. Attributes: {token => "<G0 expression>"}
    |    |--- rhs. Attributes: {token => "<G0 colon>"}
    |    |--- rhs. Attributes: {token => "<G0 conditionalExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 logicalOrExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 question mark>"}
    |    |--- rhs. Attributes: {token => "<G0 colon>"}
    |    |--- rhs. Attributes: {token => "<G0 conditionalExpression>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 logicalOrExpression>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 logicalAndExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 logicalOrExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 or op>"}
    |    |--- rhs. Attributes: {token => "<G0 logicalAndExpression>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 logicalAndExpression>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 inclusiveOrExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 logicalAndExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 and op>"}
    |    |--- rhs. Attributes: {token => "<G0 inclusiveOrExpression>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 inclusiveOrExpression>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 exclusiveOrExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 inclusiveOrExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 vertical bar>"}
    |    |--- rhs. Attributes: {token => "<G0 exclusiveOrExpression>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 exclusiveOrExpression>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 andExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 exclusiveOrExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 caret>"}
    |    |--- rhs. Attributes: {token => "<G0 andExpression>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 andExpression>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 equalityExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 andExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 ampersand>"}
    |    |--- rhs. Attributes: {token => "<G0 equalityExpression>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 equalityExpression>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 relationalExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 equalityExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 eq op>"}
    |    |--- rhs. Attributes: {token => "<G0 relationalExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 equalityExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 ne op>"}
    |    |--- rhs. Attributes: {token => "<G0 relationalExpression>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 relationalExpression>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 shiftExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 relationalExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 less than>"}
    |    |--- rhs. Attributes: {token => "<G0 shiftExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 relationalExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 greater than>"}
    |    |--- rhs. Attributes: {token => "<G0 shiftExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 relationalExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 le op>"}
    |    |--- rhs. Attributes: {token => "<G0 shiftExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 relationalExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 ge op>"}
    |    |--- rhs. Attributes: {token => "<G0 shiftExpression>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 shiftExpression>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 additiveExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 shiftExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 left op>"}
    |    |--- rhs. Attributes: {token => "<G0 additiveExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 shiftExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 right op>"}
    |    |--- rhs. Attributes: {token => "<G0 additiveExpression>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 additiveExpression>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 multiplicativeExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 additiveExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 plus>"}
    |    |--- rhs. Attributes: {token => "<G0 multiplicativeExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 additiveExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 hyphen>"}
    |    |--- rhs. Attributes: {token => "<G0 multiplicativeExpression>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 multiplicativeExpression>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 castExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 multiplicativeExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 star>"}
    |    |--- rhs. Attributes: {token => "<G0 castExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 multiplicativeExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 slash>"}
    |    |--- rhs. Attributes: {token => "<G0 castExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 multiplicativeExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 percent>"}
    |    |--- rhs. Attributes: {token => "<G0 castExpression>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 castExpression>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 unaryExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 words>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- rhs. Attributes: {token => "<G0 castExpression>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 unaryOperator>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 ampersand>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 star>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 plus>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 hyphen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 tilde>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 exclamation>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 unaryExpression>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 postfixExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 inc op>"}
    |    |--- rhs. Attributes: {token => "<G0 unaryExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 dec op>"}
    |    |--- rhs. Attributes: {token => "<G0 unaryExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 unaryOperator>"}
    |    |--- rhs. Attributes: {token => "<G0 castExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 sizeof>"}
    |    |--- rhs. Attributes: {token => "<G0 unaryExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 sizeof>"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 words>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 alignof>"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 words>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 postfixExpression>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 primaryExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 postfixExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 lbracket>"}
    |    |--- rhs. Attributes: {token => "<G0 expression>"}
    |    |--- rhs. Attributes: {token => "<G0 rbracket>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 postfixExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 postfixExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 argumentExpressionList>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 postfixExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 dot>"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 postfixExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 ptr op>"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 postfixExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 inc op>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 postfixExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 dec op>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 words>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- rhs. Attributes: {token => "<G0 lcurly>"}
    |    |--- rhs. Attributes: {token => "<G0 initializerList>"}
    |    |--- rhs. Attributes: {token => "<G0 rcurly>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 words>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- rhs. Attributes: {token => "<G0 lcurly>"}
    |    |--- rhs. Attributes: {token => "<G0 initializerList>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 rcurly>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 primaryExpression>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 constant>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 string>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 expression>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 genericSelection>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 argumentExpressionList>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 assignmentExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 argumentExpressionList>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 assignmentExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 argumentExpressionList>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 genericSelection>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 generic>"}
    |    |--- rhs. Attributes: {token => "<G0 lparen>"}
    |    |--- rhs. Attributes: {token => "<G0 assignmentExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 genericAssocList>"}
    |    |--- rhs. Attributes: {token => "<G0 rparen>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 genericAssocList>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 genericAssociation>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 genericAssocList>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 genericAssociation>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 genericAssociation>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 words>"}
    |    |--- rhs. Attributes: {token => "<G0 colon>"}
    |    |--- rhs. Attributes: {token => "<G0 assignmentExpression>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 default>"}
    |    |--- rhs. Attributes: {token => "<G0 colon>"}
    |    |--- rhs. Attributes: {token => "<G0 assignmentExpression>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 initializerList>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 designation>"}
    |    |--- rhs. Attributes: {token => "<G0 initializer>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 initializer>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |    |--- rhs. Attributes: {token => "<G0 colon>"}
    |    |--- rhs. Attributes: {token => "<G0 initializer>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 initializerList>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 designation>"}
    |    |--- rhs. Attributes: {token => "<G0 initializer>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 initializerList>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 initializer>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 initializer>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 lcurly>"}
    |    |--- rhs. Attributes: {token => "<G0 initializerList>"}
    |    |--- rhs. Attributes: {token => "<G0 rcurly>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 lcurly>"}
    |    |--- rhs. Attributes: {token => "<G0 initializerList>"}
    |    |--- rhs. Attributes: {token => "<G0 comma>"}
    |    |--- rhs. Attributes: {token => "<G0 rcurly>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 assignmentExpression>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 designation>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 designatorList>"}
    |    |--- rhs. Attributes: {token => "<G0 equal>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 designatorList>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 designator>"}
    |         |--- quantifier. Attributes: {token => "+"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 designator>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 lbracket>"}
    |    |--- rhs. Attributes: {token => "<G0 constantExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 rbracket>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 dot>"}
    |    |--- rhs. Attributes: {token => "<G0 identifier>"}
    |    |--- alternative. Attributes: {token => "|"}
    |    |--- rhs. Attributes: {token => "<G0 lbracket>"}
    |    |--- rhs. Attributes: {token => "<G0 constantExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 ellipsis>"}
    |    |--- rhs. Attributes: {token => "<G0 constantExpression>"}
    |    |--- rhs. Attributes: {token => "<G0 rbracket>"}
    |--- statement. Attributes: {token => "statement"}
    |    |--- lhs. Attributes: {token => "<G0 constantExpression>"}
    |    |--- op_declare_match. Attributes: {token => "lexeme"}
    |    |--- rhs. Attributes: {token => "<G0 conditionalExpression>"}
    |--- statement. Attributes: {token => "statement"}
         |--- lhs. Attributes: {token => ":discard"}
         |--- rhs. Attributes: {token => "<GCC attribute>"}
