default_rule =>
{
    ':default' => 1,
    adverb_list =>
    {
        adverb_list_items =>
        {
            adverb_item =>
            {
                action =>
                {
                    action_name =>
                    {
                        array_descriptor =>
                        {
                            '[values]' => 1,
                        },
                    },
                },
            },
        },
    },
    op_declare_bnf =>
    {
        '::=' => 1,
    },
},
discard_rule =>
{
    single_symbol =>
    {
        symbol =>
        {
            symbol_name =>
            {
                bare_name =>
                {
                    whitespace => 1,
                },
            },
        },
    },
},
lexeme_default_statement =>
{
    adverb_list =>
    {
        adverb_list_items =>
        {
            adverb_item =>
            {
                latm_specification =>
                {
                    boolean => 1,
                },
            },
        },
    },
},
lexeme_rule =>
{
    adverb_list =>
    {
        adverb_list_items =>
        {
            adverb_item =>
            {
                event_specification =>
                {
                    event_name =>
                    {
                        standard_name =>
                        {
                            attribute_name   => 1,
                            attribute_value  => 1,
                            directed_edge    => 1,
                            end_attributes   => 1,
                            end_node         => 1,
                            literal_label    => 1,
                            node_name        => 1,
                            start_attributes => 1,
                            start_node       => 1,
                            undirected_edge  => 1,
                        },
                    },
                },
                pause_specification =>
                {
                    before_or_after =>
                    {
                        before => 1,
                    },
                },
                priority_specification =>
                {
                    signed_integer => 1,
                },
            },
        },
    },
    symbol =>
    {
        symbol_name =>
        {
            bare_name =>
            {
                attribute_name   => 1,
                attribute_value  => 1,
                directed_edge    => 1,
                end_attributes   => 1,
                end_node         => 1,
                literal_label    => 1,
                node_name        => 1,
                start_attributes => 1,
                start_node       => 1,
                undirected_edge  => 1,
            },
        },
    },
},
priority_rule =>
{
    lhs =>
    {
        symbol_name =>
        {
            bare_name =>
            {
                attribute_statement => 1,
                directed_edge       => 1,
                edge_definition     => 1,
                edge_name           => 1,
                edge_statement      => 1,
                end_attributes      => 1,
                end_node            => 1,
                escaped_char        => 1,
                graph_definition    => 1,
                graph_grammar       => 1,
                literal_label       => 1,
                node_definition     => 1,
                node_name_token     => 1,
                node_statement      => 1,
                start_attributes    => 1,
                start_node          => 1,
                string_char_set     => 1,
                string_token_pair   => 1,
                undirected_edge     => 1,
            },
        },
    },
    op_declare =>
    {
        op_declare_bnf =>
        {
            '::=' => 1,
        },
        op_declare_match =>
        {
            '~' => 1,
        },
    },
    priorities =>
    {
        alternatives =>
        {
            alternative =>
            {
                adverb_list => 1,
                rhs =>
                {
                    rhs_primary =>
                    {
                        parenthesized_rhs_primary_list =>
                        {
                            rhs_primary_list =>
                            {
                                rhs_primary =>
                                {
                                    single_quoted_string =>
                                    {
                                        ',' => 1,
                                        ':' => 1,
                                    },
                                },
                            },
                        },
                        single_quoted_string =>
                        {
                            '--'    => 1,
                            '->'    => 1,
                            '['     => 1,
                            '\'     => 1,
                            ']'     => 1,
                            'label' => 1,
                            '{'     => 1,
                            '}'     => 1,
                        },
                        single_symbol =>
                        {
                            character_class =>
                            {
                                '[[:print:]]' => 1,
                                '[^;:}\]]'    => 1,
                            },
                            symbol =>
                            {
                                symbol_name =>
                                {
                                    bare_name =>
                                    {
                                        attribute_definition => 1,
                                        attribute_name       => 1,
                                        attribute_value      => 1,
                                        directed_edge        => 1,
                                        edge_definition      => 1,
                                        edge_name            => 1,
                                        edge_statement       => 1,
                                        end_attributes       => 1,
                                        end_node             => 1,
                                        escaped_char         => 1,
                                        graph_definition     => 1,
                                        literal_label        => 1,
                                        node_definition      => 1,
                                        node_name            => 1,
                                        node_name_token      => 1,
                                        node_statement       => 1,
                                        start_attributes     => 1,
                                        start_node           => 1,
                                        string_token_set     => 1,
                                        undirected_edge      => 1,
                                    },
                                },
                            },
                        },
                    },
                },
            },
        },
    },
},
quantified_rule =>
{
    adverb_list => 1,
    lhs =>
    {
        symbol_name =>
        {
            bare_name =>
            {
                attribute_definition => 1,
                attribute_name       => 1,
                attribute_value      => 1,
                node_name            => 1,
                string_token_set     => 1,
                whitespace           => 1,
            },
        },
    },
    op_declare =>
    {
        op_declare_bnf =>
        {
            '::=' => 1,
        },
        op_declare_match =>
        {
            '~' => 1,
        },
    },
    quantifier =>
    {
        '+' => 1,
    },
    single_symbol =>
    {
        character_class =>
        {
            '[\s]' => 1,
        },
        symbol =>
        {
            symbol_name =>
            {
                bare_name =>
                {
                    attribute_statement => 1,
                    string_char_set     => 1,
                    string_token_pair   => 1,
                },
            },
        },
    },
},
default_rule =>
{
    ':default' => 1,
    adverb_list =>
    {
        adverb_list_items =>
        {
            adverb_item =>
            {
                action =>
                {
                    action_name =>
                    {
                        array_descriptor =>
                        {
                            '[values]' => 1,
                        },
                    },
                },
            },
        },
    },
    op_declare_bnf =>
    {
        '::=' => 1,
    },
},
discard_rule =>
{
    single_symbol =>
    {
        symbol =>
        {
            symbol_name =>
            {
                bare_name =>
                {
                    whitespace => 1,
                },
            },
        },
    },
},
lexeme_default_statement =>
{
    adverb_list =>
    {
        adverb_list_items =>
        {
            adverb_item =>
            {
                latm_specification =>
                {
                    boolean => 1,
                },
            },
        },
    },
},
lexeme_rule =>
{
    adverb_list =>
    {
        adverb_list_items =>
        {
            adverb_item =>
            {
                event_specification =>
                {
                    event_name =>
                    {
                        standard_name =>
                        {
                            attribute_name   => 1,
                            attribute_value  => 1,
                            directed_edge    => 1,
                            end_attributes   => 1,
                            end_node         => 1,
                            literal_label    => 1,
                            node_name        => 1,
                            start_attributes => 1,
                            start_node       => 1,
                            undirected_edge  => 1,
                        },
                    },
                },
                pause_specification =>
                {
                    before_or_after =>
                    {
                        before => 1,
                    },
                },
                priority_specification =>
                {
                    signed_integer => 1,
                },
            },
        },
    },
    symbol =>
    {
        symbol_name =>
        {
            bare_name =>
            {
                attribute_name   => 1,
                attribute_value  => 1,
                directed_edge    => 1,
                end_attributes   => 1,
                end_node         => 1,
                literal_label    => 1,
                node_name        => 1,
                start_attributes => 1,
                start_node       => 1,
                undirected_edge  => 1,
            },
        },
    },
},
priority_rule =>
{
    lhs =>
    {
        symbol_name =>
        {
            bare_name =>
            {
                attribute_statement => 1,
                directed_edge       => 1,
                edge_definition     => 1,
                edge_name           => 1,
                edge_statement      => 1,
                end_attributes      => 1,
                end_node            => 1,
                escaped_char        => 1,
                graph_definition    => 1,
                graph_grammar       => 1,
                literal_label       => 1,
                node_definition     => 1,
                node_name_token     => 1,
                node_statement      => 1,
                start_attributes    => 1,
                start_node          => 1,
                string_char_set     => 1,
                string_token_pair   => 1,
                undirected_edge     => 1,
            },
        },
    },
    op_declare =>
    {
        op_declare_bnf =>
        {
            '::=' => 1,
        },
        op_declare_match =>
        {
            '~' => 1,
        },
    },
    priorities =>
    {
        alternatives =>
        {
            alternative =>
            {
                adverb_list => 1,
                rhs =>
                {
                    rhs_primary =>
                    {
                        parenthesized_rhs_primary_list =>
                        {
                            rhs_primary_list =>
                            {
                                rhs_primary =>
                                {
                                    single_quoted_string =>
                                    {
                                        ',' => 1,
                                        ':' => 1,
                                    },
                                },
                            },
                        },
                        single_quoted_string =>
                        {
                            '--'    => 1,
                            '->'    => 1,
                            '['     => 1,
                            '\'     => 1,
                            ']'     => 1,
                            'label' => 1,
                            '{'     => 1,
                            '}'     => 1,
                        },
                        single_symbol =>
                        {
                            character_class =>
                            {
                                '[[:print:]]' => 1,
                                '[^;:}\]]'    => 1,
                            },
                            symbol =>
                            {
                                symbol_name =>
                                {
                                    bare_name =>
                                    {
                                        attribute_definition => 1,
                                        attribute_name       => 1,
                                        attribute_value      => 1,
                                        directed_edge        => 1,
                                        edge_definition      => 1,
                                        edge_name            => 1,
                                        edge_statement       => 1,
                                        end_attributes       => 1,
                                        end_node             => 1,
                                        escaped_char         => 1,
                                        graph_definition     => 1,
                                        literal_label        => 1,
                                        node_definition      => 1,
                                        node_name            => 1,
                                        node_name_token      => 1,
                                        node_statement       => 1,
                                        start_attributes     => 1,
                                        start_node           => 1,
                                        string_token_set     => 1,
                                        undirected_edge      => 1,
                                    },
                                },
                            },
                        },
                    },
                },
            },
        },
    },
},
quantified_rule =>
{
    adverb_list => 1,
    lhs =>
    {
        symbol_name =>
        {
            bare_name =>
            {
                attribute_definition => 1,
                attribute_name       => 1,
                attribute_value      => 1,
                node_name            => 1,
                string_token_set     => 1,
                whitespace           => 1,
            },
        },
    },
    op_declare =>
    {
        op_declare_bnf =>
        {
            '::=' => 1,
        },
        op_declare_match =>
        {
            '~' => 1,
        },
    },
    quantifier =>
    {
        '+' => 1,
    },
    single_symbol =>
    {
        character_class =>
        {
            '[\s]' => 1,
        },
        symbol =>
        {
            symbol_name =>
            {
                bare_name =>
                {
                    attribute_statement => 1,
                    string_char_set     => 1,
                    string_token_pair   => 1,
                },
            },
        },
    },
},
